<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>플타 앞발자의 삽질로그</title>
    <link>http://flamingotiger.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>프론트엔드 개발 혹은 공부하면서 기록하는 블로그입니다. TypeScript, React를 주로 선호합니다.</description>
    <pubDate>Fri, 16 Feb 2024 08:04:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>안드로이드 flutter 빌드시 주의사항</title>
      <link>http://flamingotiger.github.io/frontend/flutter/flutter-build-info/</link>
      <guid>http://flamingotiger.github.io/frontend/flutter/flutter-build-info/</guid>
      <pubDate>Fri, 22 Dec 2023 07:57:06 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;안드로이드-빌드하기&quot;&gt;&lt;a href=&quot;#안드로이드-빌드하기&quot; class=&quot;headerlink&quot; title=&quot;안드로이드 빌드하기&quot;&gt;&lt;/a&gt;안드로이드 빌드하기&lt;/h2&gt;&lt;p&gt;구글 플레이 콘솔에서는 aab파일을 업로드 해야합니다.&lt;/p&gt;
&lt;p&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="안드로이드-빌드하기"><a href="#안드로이드-빌드하기" class="headerlink" title="안드로이드 빌드하기"></a>안드로이드 빌드하기</h2><p>구글 플레이 콘솔에서는 aab파일을 업로드 해야합니다.</p><p>flutter 프로젝트 루트에서 다음 커맨드를 입력합니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter build appbundle</span><br></pre></td></tr></table></figure><p>위의 커맨드를 입렵하면 aab파일로 번들이 됩니다.</p><p>apk 파일로 따로 다운로드 받고 싶을때는 다음처럼 커맨드를 입력하면 됩니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter build apk</span><br></pre></td></tr></table></figure><h2 id="빌드-버전"><a href="#빌드-버전" class="headerlink" title="빌드 버전"></a>빌드 버전</h2><p>버전을 1.0.0+10 까지 만들고 내부테스트를 한 이후 프로덕션을 한다고 가정을 했을때, 1.0.1+1은 불가능합니다.</p><p>1.0.1+11로 해야합니다.</p><p>1.0.1는 사용자에게 보이는 버전이지만 +11는 안드로이드 콘솔에서 식별하는 아이디로써 고유한 정수여야합니다.</p><h3 id="정리하자면"><a href="#정리하자면" class="headerlink" title="정리하자면"></a>정리하자면</h3><p>내부테스트 1.0.0+1 가능<br>내부테스트 1.0.0+2 가능<br>내부테스트 1.0.0+3 가능<br>내부테스트 1.0.0+4 가능<br>…<br>내부테스트 1.0.0+22 가능<br>프로덕션(릴리즈) 1.0.0+1 불가능<br>프로덕션(릴리즈) 1.0.0+22 불가능<br><code>프로덕션(릴리즈) 1.0.0+23 가능</code></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/flutter/flutter-build-info/#disqus_thread</comments>
    </item>
    
    <item>
      <title>flutter에서 firebase analytics 추가할때 에러수정</title>
      <link>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-analytics/</link>
      <guid>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-analytics/</guid>
      <pubDate>Wed, 20 Dec 2023 07:31:50 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h1&gt;&lt;p&gt;• Missing google_app_id. Firebase Analytics disabl
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><p>• Missing google_app_id. Firebase Analytics disabled 에러발생시 해결방법</p><p>버전 수정</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:7.3.0'</span></span><br><span class="line">        <span class="comment">// START: FlutterFire Configuration</span></span><br><span class="line">        classpath <span class="string">'com.google.gms:google-services:4.3.15'</span> <span class="comment">// 이 버전으로 수정</span></span><br><span class="line">        classpath <span class="string">'com.google.firebase:firebase-crashlytics-gradle:2.8.1'</span></span><br><span class="line">        <span class="comment">// END: FlutterFire Configuration</span></span><br><span class="line">        classpath <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">"com.android.application"</span></span><br><span class="line">    id <span class="string">"com.google.gms.google-services"</span> <span class="comment">// 여기에 추가</span></span><br><span class="line">    id <span class="string">"kotlin-android"</span></span><br><span class="line">    id <span class="string">"dev.flutter.flutter-gradle-plugin"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Google permission --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.google.android.gms.permission.AD_ID"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>구글 플레이 스토어에 배포시 애널리틱스는 AD_ID 권한을 넣어주어야 한다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-analytics/#disqus_thread</comments>
    </item>
    
    <item>
      <title>flutter firebase crashlytics 추가하기</title>
      <link>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-crashytics/</link>
      <guid>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-crashytics/</guid>
      <pubDate>Tue, 19 Dec 2023 07:45:16 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;firebase crashlytics는 사용자가 앱을 사용하면서 발생하는 크리티컬한 에러들이 발생한 내역을 확인할 수 있는 서비스입니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://firebase.google.com/docs/crashlytics
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>firebase crashlytics는 사용자가 앱을 사용하면서 발생하는 크리티컬한 에러들이 발생한 내역을 확인할 수 있는 서비스입니다.</p><p><a href="https://firebase.google.com/docs/crashlytics/get-started?hl=ko&platform=flutter" rel="external nofollow noopener noreferrer" target="_blank">공식 문서</a></p><p>먼저 이전에 firebase 기본 설정들을 해줍니다.<br>설정방법은 <a href="https://flamingotiger.github.io/categories/frontend/flutter/flutter-firebase-setting">이전 포스트</a>에서 다루었습니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter pub add firebase_crashlytics</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutterfire configure</span><br></pre></td></tr></table></figure><p>두가지 커맨드 실행하면 설정완료</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="keyword">void</span>&gt; main() <span class="keyword">async</span> &#123;</span><br><span class="line">    WidgetsFlutterBinding.ensureInitialized();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ensureInitialized 이후에 실행해야함</span></span><br><span class="line">    <span class="keyword">await</span> Firebase.initializeApp();</span><br><span class="line">    FlutterError.onError = (errorDetails) &#123;</span><br><span class="line">      FirebaseCrashlytics.instance.recordFlutterFatalError(errorDetails);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// Pass all uncaught asynchronous errors that aren't handled by the Flutter framework to Crashlytics</span></span><br><span class="line">    PlatformDispatcher.instance.onError = (error, stack) &#123;</span><br><span class="line">      FirebaseCrashlytics.instance.recordError(error, stack, fatal: <span class="keyword">true</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    runApp(MyApp());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-crashytics/#disqus_thread</comments>
    </item>
    
    <item>
      <title>flutter firebase 초기 설정하기</title>
      <link>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-setting/</link>
      <guid>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-setting/</guid>
      <pubDate>Fri, 15 Dec 2023 07:24:01 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;firebase 사이트에서 기본적으로 설정이 완료 되어있는 상태&lt;/p&gt;
&lt;p&gt;firebase-tools을 설치한다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>firebase 사이트에서 기본적으로 설정이 완료 되어있는 상태</p><p>firebase-tools을 설치한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g firebase-tools</span><br></pre></td></tr></table></figure><p>컴퓨터에 firebase의 id,pw 가 등록되어있어야한다.<br>파이어베이스 로그인을 진행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firebase login</span><br></pre></td></tr></table></figure><p>configure를 입력하면 자동으로 flutter에 맞게 appId 값들이 지정된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutterfire configure</span><br></pre></td></tr></table></figure><h2 id="기본으로-설정되어-있는-번들-id-값에서-변경되었을때"><a href="#기본으로-설정되어-있는-번들-id-값에서-변경되었을때" class="headerlink" title="기본으로 설정되어 있는 번들 id 값에서 변경되었을때"></a>기본으로 설정되어 있는 번들 id 값에서 변경되었을때</h2><p>파이어 베이스에서 앱 번들 값을 수정할 수 없기 때문에 삭제하고 다시 추가해줘야함</p><p><img src="/image/frontend/flutter/flutter-firebase-setting-0.png" alt="설정이미지"></p><p>삭제후 다시 추가</p><p>이후에는 vscode에서 이전에 등록되어있는 빌드 부분을 새로운 번들값으로 변경</p><p><img src="/image/frontend/flutter/flutter-firebase-setting-1.png" alt></p><p>다 변경이 완료되었으면 appid 값들을 다시 설정한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutterfire configure</span><br></pre></td></tr></table></figure><p>수정된 값들로 변경이 되면서 저장시에 덮어쓰기를 할 것 이냐고 묻는다.</p><p>전부 yes로 승인하면 완료된다.</p><p><img src="/image/frontend/flutter/flutter-firebase-setting-2.png" alt="정보 업데이트"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/flutter/flutter-firebase-setting/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react native(리액트 네이티브) ios 배포하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-deploy/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-deploy/</guid>
      <pubDate>Tue, 17 Jan 2023 04:02:36 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;ios 배포를 하기 위해서는 ios 개발자 계정이 필요합니다.&lt;br&gt;애플 개발자계정은 &lt;a href=&quot;https
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>ios 배포를 하기 위해서는 ios 개발자 계정이 필요합니다.<br>애플 개발자계정은 <a href="https://developer.apple.com/kr/" rel="external nofollow noopener noreferrer" target="_blank">apple developer</a>에서 등록할 수 있습니다.<br>개발자 멤버쉽을 구매해야하는데 1년에 129,000원정도 합니다. 1년마다 만료가 되기때문에 1년이 되기전에 갱신을 해주어야 합니다.<br>아이폰, 아이패드 등의 애플기기가 있어야만 등록이 가능합니다. 멤버쉽을 구매하고 며칠을 기다려야 승인이 나옵니다. 저는 승인이 될때까지 6일정도 걸렸습니다.<br>반면에 안드로이드는 한번 구매하면 평생 무료입니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-0.png" alt="애플 개발자 로그인"></p><p>애플 개발자 계정 생성 부분은 생략하겠습니다.</p><ol><li>xcode 프로젝트 배포 설정</li><li>Certificates, Identifiers &amp; Profiles</li><li>App Store Connect 앱 추가</li><li>xcode로 업로드</li><li>TestFlight로 확인</li><li>개인정보처리방침</li><li>App Store Connect에서 앱 배포</li><li>심사제출</li></ol><h2 id="1-xcode-프로젝트-배포-설정"><a href="#1-xcode-프로젝트-배포-설정" class="headerlink" title="1. xcode 프로젝트 배포 설정"></a>1. xcode 프로젝트 배포 설정</h2><p><code>ios/[파일명].xcworkspace</code> 파일을 열고 xcode general 탭에서 빌드 버전을 명시해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-1.png" alt="xcode 빌드 버전 작성"></p><p><a href="https://www.appicon.co/" rel="external nofollow noopener noreferrer" target="_blank">appicon</a>사이트에서 아이콘을 넣으면 자동으로 사이즈에 맞춰서 만들어줍니다. 만들어진 아이콘을 다운로드 받습니다.</p><p>xcode로 돌아와서 <code>images/AppIcon</code>으로 들어가면 아이콘을 넣을 수 있는 공간이 나옵니다.<br>아까 받은 사이즈별 앱아이콘을 드래그해서넣어줍니다.<br><img src="/image/frontend/ReactNative/react-native-ios-deploy-2.png" alt="favicon"></p><h2 id="2-Certificates-Identifiers-amp-Profiles"><a href="#2-Certificates-Identifiers-amp-Profiles" class="headerlink" title="2. Certificates, Identifiers &amp; Profiles"></a>2. Certificates, Identifiers &amp; Profiles</h2><p>애플의 <a href="https://developer.apple.com/account/resources/identifiers/list" rel="external nofollow noopener noreferrer" target="_blank">Certificates</a> 사이트로 들어가서 서명을 추가해줍니다. 이후 <code>development.cer</code>파일은 저장해서 잃어버리지 않도록 합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-3.png" alt="Certificates"></p><h2 id="3-App-Store-Connect-앱-추가"><a href="#3-App-Store-Connect-앱-추가" class="headerlink" title="3. App Store Connect 앱 추가"></a>3. App Store Connect 앱 추가</h2><p><a href="https://appstoreconnect.apple.com/apps" rel="external nofollow noopener noreferrer" target="_blank">App Store Connect</a> 사이트로 들어가면 앱을 추가 할 수 있는 페이지가 나옵니다. 추가해주도록 하겠습니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-4.png" alt="App Store Connect"></p><p>추가 버튼을 클릭하면 다음 폼이 나옵니다. 작성해주도록 합니다. 마지막 부분의 SKU는 제품의 고유번호라고 생각하면 쉽습니다. 자유롭게 작성해주면 됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-5.png" alt="신규 앱추가"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-6.png" alt="생성 완료"></p><h2 id="4-xcode로-업로드"><a href="#4-xcode로-업로드" class="headerlink" title="4. xcode로 업로드"></a>4. xcode로 업로드</h2><p>생성이후 하단으로 스크롤을 내려보면 빌드 섹션이 보이는데, 거기서 업로드 도구 보기를 클릭하면 업로드하는 방법을 알수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-ios-deploy-7.png" alt="업로드 도구 보기"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-8.png" alt="업로드 방법"><br>업로드 하는 방법으로는 세가지가 있는데, 저희는 이중에서 첫번째 xcode로 업로드를 해보려고 합니다.</p><p>xcode로 돌아옵니다.<br>xcode의 <code>Product &gt; Archive</code>를 선택해줍니다.<br><img src="/image/frontend/ReactNative/react-native-ios-deploy-9.png" alt="archive"></p><p>빌드를 기다리고 나면, 다음과 같은 창이 나옵니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-10.png" alt="Distribute App"></p><p>Distribute App버튼을 눌러줍니다.<br>다음 이미지부터 이미지 처럼 선택을 해주고 다음으로 넘어가 주시면 됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-11.png" alt="app store connect"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-12.png" alt="upload"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-13.png" alt="next"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-14.png" alt="automatically manage signing"></p><p>정보를 잘 확인해줍니다. 이후 업데이트를 누르면 업데이트가 진행됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-15.png" alt="detail"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-16.png" alt="upload"></p><p>업로드가 완료되면 TestFlight로 확인해봅니다.</p><h2 id="5-TestFlight로-확인"><a href="#5-TestFlight로-확인" class="headerlink" title="5. TestFlight로 확인"></a>5. TestFlight로 확인</h2><p>TestFlight에서 확인 했는데 다음과 같은 경고가 나오면 파란색 관리 버튼을 눌러줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-17.png" alt="수출 규정 관련 문서가 누락됨"></p><p>암호화를 사용하지 않을 경우 체크 부분에서 암호화 없는 선택메뉴를 선택해주면됩니디.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-18.png" alt="제출 준비 완료"></p><p>앞으로도 암호화를 사용하지 않을 예정이면 info.plist에서 다음 코드를 입력해줍니다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">key</span>&gt;</span>ITSAppUsesNonExemptEncryption<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- ... --&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-19.png" alt="info"></p><h2 id="6-개인정보처리방침"><a href="#6-개인정보처리방침" class="headerlink" title="6. 개인정보처리방침"></a>6. 개인정보처리방침</h2><p>app store connect 사이트에서 앱에 수집하는 개인정보 탭을 선택하면 다음 화면이 나옵니다.<br><img src="/image/frontend/ReactNative/react-native-ios-deploy-21.png" alt="개인정보 수집"></p><p>데이터 유형의 데이터 수집 여부도 확인해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-22.png" alt="데이터 수집 하지 않음"></p><p>개인정보처리방침은 안드로이드나 ios나 필수로 url을 넣어주어야합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-27.png" alt="개인정보처리방첨 입력"></p><p>개인정보처리방침 생성방법은 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-android-deploy/#%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EB%B0%A9%EC%B9%A8">안드로이드 배포하기</a>에서 개인정보처리방침 부분을 참고해주세요</p><h2 id="7-App-Store-Connect에서-앱-배포"><a href="#7-App-Store-Connect에서-앱-배포" class="headerlink" title="7. App Store Connect에서 앱 배포"></a>7. App Store Connect에서 앱 배포</h2><h3 id="미리보기-추가"><a href="#미리보기-추가" class="headerlink" title="미리보기 추가"></a>미리보기 추가</h3><p>빌드를 선택해서 추가해줍니다.<br><img src="/image/frontend/ReactNative/react-native-ios-deploy-20.png" alt="빌드추가"></p><p>다음으로 앱의 미리보기 및 스크린샷을 입력해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-23.png" alt="스크린샷 추가하기"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-24.png" alt="스크린샷 사이즈"></p><p>이미지 필수 사이즈</p><ul><li>6.5형 아이폰의 <code>1284*2778</code></li><li>5.5형 아이폰의 <code>1242*2208</code></li></ul><p>스크린샷 사양에 관해서는 <a href="https://help.apple.com/app-store-connect/#/devd274dd925" rel="external nofollow noopener noreferrer" target="_blank">애플의 스크린샷 사양 페이지</a>에서 더 자세히 나와있습니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-25.png" alt="스크린샷 등록"></p><p>이렇게 두가지 미리보기를 만들어서 파일을 첨부합니다.</p><h3 id="가격-설정"><a href="#가격-설정" class="headerlink" title="가격 설정"></a>가격 설정</h3><p>이 어플리케이션의 가격을 얼마로 할지 설정해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-28.png" alt="가격 설정"></p><h3 id="콘텐츠-권한-및-연령-등급-설정"><a href="#콘텐츠-권한-및-연령-등급-설정" class="headerlink" title="콘텐츠 권한 및 연령 등급 설정"></a>콘텐츠 권한 및 연령 등급 설정</h3><p><code>앱 정보 &gt; 일반정보</code>에서 콘텐츠 권한 및 연령 등급을 작성해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-29.png" alt="콘텐츠 권한 및 연령 등급"></p><h2 id="8-심사제출"><a href="#8-심사제출" class="headerlink" title="8. 심사제출"></a>8. 심사제출</h2><p>이미지 및 설명 등을 다 작성해주었다면 저장을 해줍니다. 그러면 심사에 추가라는 버튼이 활성화 됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-26.png" alt="심사에 추가"></p><p>심사제출 버튼을 클릭하면 작성해야하는데 못한것이 있거나 잘못입력한 부분들을 유효성검사를 통해서 알려줍니다.<br>못한 부분들을 마져 다하고 채워넣고 나면 심사 제출을 할 수 있습니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-30.png" alt="심사 제출"></p><p><img src="/image/frontend/ReactNative/react-native-ios-deploy-31.png" alt="심사 제출 완료"></p><p>이것으로 어플리케이션을 안드로이드와 ios 둘다 배포를 해보았습니다.<br>심사 리젝당하지만 않는다면 배포는 생각보다 어렵지 않은것 같아요.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-deploy/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react native(리액트 네이티브) 안드로이드 배포하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-deploy/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-deploy/</guid>
      <pubDate>Wed, 11 Jan 2023 01:11:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;구글 개발자 등록이 완료되어있고 react native 프로젝트가 있다는 가정하에 배포 방법을 알아보도록 하겠습
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>구글 개발자 등록이 완료되어있고 react native 프로젝트가 있다는 가정하에 배포 방법을 알아보도록 하겠습니다.</p><ol><li>keytool로 개인서명키 만들기</li><li>Gradle properties 변수들 작성</li><li>Gradle 설정파일 수정</li><li>release AAB(Android App Bundle) 빌드</li><li>AAB 파일 업로드</li><li>개인정보처리방침</li></ol><h2 id="1-keytool로-개인서명키-만들기"><a href="#1-keytool로-개인서명키-만들기" class="headerlink" title="1. keytool로 개인서명키 만들기"></a>1. keytool로 개인서명키 만들기</h2><p>keytool 를 사용하여 개인 서명 키를 생성할 수 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure><ul><li>keystore 옵션의 my-upload-key.keystore 값은 파일이름입니다.</li><li>alias 옵션의 my-key-alias 값은 별명입니다.</li><li>validity 옵션의 10000 값은 유요기간입니다.</li></ul><p>위의 명령어를 실행하면 조직 이름 비밀번호등을 입력하라고 나옵니다.<br>하나씩 입력해줍니다.<br>마지막에 [아니오]선택지만 나와있는데 이때는 y를 입력하고 엔터를 누르면 생성이 됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-0.png" alt="keystore 생성"></p><p>개인서명키를 분실했을경우 <a href="https://support.google.com/googleplay/android-developer/answer/9842756?visit_id=638089976488618381-2115785518&rd=1#reset" rel="external nofollow noopener noreferrer" target="_blank">사이트</a>를 참고해주세요</p><h2 id="2-Gradle-properties-변수들-작성"><a href="#2-Gradle-properties-변수들-작성" class="headerlink" title="2. Gradle properties 변수들 작성"></a>2. Gradle properties 변수들 작성</h2><p><code>android/gradle.properties</code> 파일 하단에 다음 값을 추가합니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore</span><br><span class="line">MYAPP_UPLOAD_KEY_ALIAS=my-key-alias</span><br><span class="line">MYAPP_UPLOAD_STORE_PASSWORD=*****</span><br><span class="line">MYAPP_UPLOAD_KEY_PASSWORD=*****</span><br></pre></td></tr></table></figure><p>아까전에 생성한 파일의 이름 별명 비밀번호를 각자에 생성한 파일에 맞게 입력해야합니다.</p><h2 id="3-Gradle-설정파일-수정"><a href="#3-Gradle-설정파일-수정" class="headerlink" title="3. Gradle 설정파일 수정"></a>3. Gradle 설정파일 수정</h2><p><code>android/app/build.gradle</code> 파일에 다음 코드를 추가합니다.</p><figure class="highlight java"><figcaption><span>android/app/build.gradle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123; ... &#125;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="keyword">if</span> (project.hasProperty(<span class="string">'MYAPP_UPLOAD_STORE_FILE'</span>)) &#123;</span><br><span class="line">                <span class="function">storeFile <span class="title">file</span><span class="params">(MYAPP_UPLOAD_STORE_FILE)</span></span></span><br><span class="line"><span class="function">                storePassword MYAPP_UPLOAD_STORE_PASSWORD</span></span><br><span class="line"><span class="function">                keyAlias MYAPP_UPLOAD_KEY_ALIAS</span></span><br><span class="line"><span class="function">                keyPassword MYAPP_UPLOAD_KEY_PASSWORD</span></span><br><span class="line"><span class="function">            &#125;</span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">    &#125;</span></span><br><span class="line"><span class="function">    buildTypes </span>&#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ...</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="4-release-AAB-Android-App-Bundle-빌드"><a href="#4-release-AAB-Android-App-Bundle-빌드" class="headerlink" title="4. release AAB(Android App Bundle) 빌드"></a>4. release AAB(Android App Bundle) 빌드</h2><p>bundleRelease은 앱을 실행하는데 필요한 모든 JavaScript를 AAB(AndroidApp Bundle)로 묶습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd android</span><br><span class="line">./gradlew bundleRelease</span><br></pre></td></tr></table></figure><p>빌드가 성공하면 <code>android/app/build/outputs/bundle/release/app-release.aab</code>에서 파일을 찾을수 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open android/app/build/outputs/bundle/release</span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-native-android-deploy-1.png" alt="release 파일"></p><p>진행하면서 어려운점이나 막히는 부분이 있다면 <a href="https://reactnative.dev/docs/signed-apk-android" rel="external nofollow noopener noreferrer" target="_blank">공식 홈페이지</a>를 참고 하면 됩니다.</p><h2 id="5-구글-플레이스토어에-배포하기"><a href="#5-구글-플레이스토어에-배포하기" class="headerlink" title="5. 구글 플레이스토어에 배포하기"></a>5. 구글 플레이스토어에 배포하기</h2><p>구글 플레이스토어 콘솔에 접속해서 로그인하고 앱을 생성합니다.<br>이후 앱에 관한 정보 제공 및 스토어 등록정보를 작성해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-2.png" alt="앱에 관한 정보 제공 및 스토어 등록정보 설정"></p><h3 id="개인정보처리방침"><a href="#개인정보처리방침" class="headerlink" title="개인정보처리방침"></a>개인정보처리방침</h3><p>개인정보처리방침을 등록해야합니다.<br>개인정보 처리방침을 손쉽게 작성할 수 있는 <a href="https://privacy.go.kr/" rel="external nofollow noopener noreferrer" target="_blank">정부 공식 사이트</a>에 접속합니다.</p><p>개인정보처리방침 만들기를 클릭하고, 생성을 진행합니다.<br><img src="/image/frontend/ReactNative/react-native-android-deploy-4.png" alt="개인정보처리방침 만들기"></p><p>생성이 완료되면 파일을 다운받거나 텍스트로 받을 수 있는데, 사이트를 쉽게 적용하기 위해서 notion을 사용해보도록 하겠습니다.</p><h3 id="notion-사이트-공유"><a href="#notion-사이트-공유" class="headerlink" title="notion 사이트 공유"></a>notion 사이트 공유</h3><p>노션을 접속한 이후, 개인정보 처리방침 페이지를 만들고 개인정보처리방침 텍스트를 복사해서 붙여넣습니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-5.png" alt="개인정보처리방침 글"></p><p>그리고 우측위에 share버튼이 있는데 클릭하면 다음과 같은 창이 나옵니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-6.png" alt="share 창"></p><p>share to web을 토글하면 web link가 나오는데 이 링크는 바로 어떤 웹 브라우저에서도 바로 접속할 수 있게됩니다.</p><p>링크를 복사해서 구글 플레이스토어 콘솔 개인정보처리방침에 등록합니다.<br><img src="/image/frontend/ReactNative/react-native-android-deploy-7.png" alt="개인정보처리방침 등록"></p><h3 id="배포하기"><a href="#배포하기" class="headerlink" title="배포하기"></a>배포하기</h3><p>다음으로 파일을 배포하도록 하겠습니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-3.png" alt="프로덕션 버전 만들기"></p><p>App bundle 부분에 파일을 업로드 합니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-8.png" alt="파일업로드"></p><p>이후 우측 하단에 활성화된 버전검토 버튼을 클릭합니다.<br>이후 나오는 에러나 경고등을 처리해줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-9.png" alt="버전 검토후 에러"></p><p>정보수집여부 개인정보처리방침등의 문제를 해결하고 나면 프로덕션 트랙으로 출시 시작버튼이 활성화 됩니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-10.png" alt="출시시작 버튼"></p><p>출시가 완료되었습니다.<br>구글측에서 앱을 검토한 이후 실제 구글 플레이스토어에서 확인 할 수 있습니다.<br>프로젝트 생성부터 배포까지 고생많으셨습니다.</p><p><img src="/image/frontend/ReactNative/react-native-android-deploy-11.png" alt="출시완료"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-deploy/#disqus_thread</comments>
    </item>
    
    <item>
      <title>react native에서 구글 애드몹(admob) 적용하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-admob/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-admob/</guid>
      <pubDate>Tue, 10 Jan 2023 05:09:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;구글의 광고플랫폼으로 웹에서는 구글 애드센스, 어플리케이션에서는 구글 애드몹을 사용합니다.&lt;br&gt;수익을 창출 할
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>구글의 광고플랫폼으로 웹에서는 구글 애드센스, 어플리케이션에서는 구글 애드몹을 사용합니다.<br>수익을 창출 할 수 있는 간편한 플랫폼입니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p>기존 firebase admob 설치를 검색하면 구버전의 경우가 많고 현재(2023년 01년 10일 기준) 패키지들 대부분<br>deprecate가 되었습니다.<br>@react-native-admob/admob 패키지 설명에보면 react-native-google-mobile-ads로 패키지 변경되었다는 문구를 확인 할 수 있습니다.</p><p><img src="/image/frontend/ReactNative/react-native-admob-0.png" alt="@react-native-firebase/admob"></p><p><img src="/image/frontend/ReactNative/react-native-admob-1.png" alt="@react-native-admob/admob"></p><p><img src="/image/frontend/ReactNative/react-native-admob-2.png" alt="react-native-google-mobile-ads"></p><p>패키지를 확인해보고 <code>react-native-google-mobile-ads</code>를 설치해보도록 하겠습니다.<br>firebase 설치 없이 간단하게 admob 적용이 가능합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-native-google-mobile-ads</span><br></pre></td></tr></table></figure><h2 id="설정"><a href="#설정" class="headerlink" title="설정"></a>설정</h2><p>admob 사이트에 로그인을 합니다.<br>이후 ios, android 앱을 추가합니다.</p><p>android_app_id 와 ios_app_id 부분에 admob에서 추가한 값을 가져옵니다.</p><p>자세한 내용은 <a href="https://docs.page/invertase/react-native-google-mobile-ads" rel="external nofollow noopener noreferrer" target="_blank">docs</a>에서 확인할 수 있습니다.</p><p>다양한 방법으로 광고를 게시할 수 있습니다. 앱에 최대한 방해가 되지 않도록 하기 위해 광고 단위를 배너로 설정 해보도록 하겠습니다.</p><p><img src="/image/frontend/ReactNative/react-native-admob-3.png" alt="광고 단위 만들기 - 형식"></p><p>원하는 이름으로 지어줍니다.</p><p><img src="/image/frontend/ReactNative/react-native-admob-4.png" alt="광고 단위 이름 설정"></p><p><img src="/image/frontend/ReactNative/react-native-admob-5.png" alt="광고 단위 생성 완료"></p><p>광고 단위 생성후 나오는 ca-app-pub코드를 사용합니다. 복사 해두도록 합니다.</p><p>ios와 android 각각 광고단위를 설정해주어야 합니다.<br>설정이 완료되었다면 코드를 입력해보도록 하겠습니다.</p><h3 id="프로그램-작성"><a href="#프로그램-작성" class="headerlink" title="프로그램 작성"></a>프로그램 작성</h3><p>app.json파일에 다음 코드를 입력해줍니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// &lt;project-root&gt;/app.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"react-native-google-mobile-ads"</span>: &#123;</span><br><span class="line">    <span class="attr">"android_app_id"</span>: <span class="string">"ca-app-pub-xxxxxxxx~xxxxxxxx"</span>,</span><br><span class="line">    <span class="attr">"ios_app_id"</span>: <span class="string">"ca-app-pub-xxxxxxxx~xxxxxxxx"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>admob banner를 실행할 컴포넌트를 만들어줍니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Platform, StyleSheet, View&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;BannerAd, BannerAdSize, TestIds&#125; <span class="keyword">from</span> <span class="string">'react-native-google-mobile-ads'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> unitID =</span><br><span class="line">  Platform.select(&#123;</span><br><span class="line">    ios: <span class="string">'ca-app-pub-복사한ID'</span>,</span><br><span class="line">    android: <span class="string">'ca-app-pub-복사한ID'</span>,</span><br><span class="line">  &#125;) || <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> adUnitId = __DEV__ ? TestIds.BANNER : unitID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Admob = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View style=&#123;styles.admob&#125;&gt;</span><br><span class="line">      &lt;BannerAd</span><br><span class="line">        unitId=&#123;adUnitId&#125;</span><br><span class="line">        size=&#123;BannerAdSize.FULL_BANNER&#125;</span><br><span class="line">        requestOptions=&#123;&#123;</span><br><span class="line">          requestNonPersonalizedAdsOnly: <span class="literal">true</span>,</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  admob: &#123;</span></span><br><span class="line"><span class="regexp">    height: 60,</span></span><br><span class="line"><span class="regexp">    flexDirection: 'row',</span></span><br><span class="line"><span class="regexp">    justifyContent: 'center',</span></span><br><span class="line"><span class="regexp">    alignItems: 'center',</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br><span class="line"><span class="regexp">export default Admob;</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> Admob <span class="keyword">from</span> <span class="string">'./Admob'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View&gt;</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;Text&gt;Admob 테스트&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>View&gt;</span><br><span class="line">      &lt;Admob /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure><p>이후 테스트 해보도록 합니다.</p><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p>현재 제작중인 어플에 광고가 들어간 것을 확인 할 수 있습니다.</p><p><img src="/image/frontend/ReactNative/react-native-admob-6.png" alt="ios admob 적용"></p><p><img src="/image/frontend/ReactNative/react-native-admob-7.png" alt="android admob 적용"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-admob/#disqus_thread</comments>
    </item>
    
    <item>
      <title>아두이노 푸쉬버튼 OneButton library 사용하기</title>
      <link>http://flamingotiger.github.io/etc/arduino/one-button/</link>
      <guid>http://flamingotiger.github.io/etc/arduino/one-button/</guid>
      <pubDate>Mon, 09 Jan 2023 02:02:23 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;이 포스트의 테스트는 esp32보드를 사용했습니다.&lt;br&gt;아두이노 푸쉬버튼을 직접 구현하는 방법이 있습니다. 커
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>이 포스트의 테스트는 esp32보드를 사용했습니다.<br>아두이노 푸쉬버튼을 직접 구현하는 방법이 있습니다. 커스텀에 아주 유용하게 사용할 수 있지만, 코드의 복잡성과 유지보수 혹은 에러 처리에 많은 어려움이 있을 것으로 보아 라이브러리를 찾던도중 가장 사용법이 쉬워보이고 star도 많이 받은것으로 보여 OneButton 라이브러리를 사용하게 됐습니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p>아두이노 IDE에서 onebutton 패키지를 검색합니다.</p><p><img src="/image/etc/arduino/one-button-0.png" alt="패키지 검색"></p><p>패키지를 검색하고 설치합니다.</p><h2 id="코드-작성"><a href="#코드-작성" class="headerlink" title="코드 작성"></a>코드 작성</h2><p>버튼을 26번 핀에 연결했습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;OneButton.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Initialize a new OneButton instance for a button</span></span><br><span class="line"><span class="comment"> * connected to digital pin 4 and GND, which is active low</span></span><br><span class="line"><span class="comment"> * and uses the internal pull-up resistor.</span></span><br><span class="line"><span class="comment"> * https://github.com/mathertel/OneButton</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUTTON_PIN 26</span></span><br><span class="line"></span><br><span class="line">OneButton button = OneButton(</span><br><span class="line">    BUTTON_PIN, <span class="comment">// Input pin for the button</span></span><br><span class="line">    <span class="literal">true</span>,       <span class="comment">// Button is active LOW</span></span><br><span class="line">    <span class="literal">true</span>        <span class="comment">// Enable internal pull-up resistor</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">singleClick</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.println(<span class="string">" 한번 클릭 했습니다."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doubleClick</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.println(<span class="string">" 더블 클릭했습니다."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">longPress</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.println(<span class="string">" 버튼을 길게 눌렀습니다."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setupButton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    button.attachClick(singleClick);</span><br><span class="line">    button.attachDoubleClick(doubleClick);</span><br><span class="line">    button.attachLongPressStop(longPress);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setup()&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loop()&#123;</span><br><span class="line">  button.tick(); <span class="comment">// 버튼을 인식하는 부분 입니다.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p>버튼을 클릭하면 다음과 같은 출력값을 확인 할 수 있습니다.</p><p><img src="/image/etc/arduino/one-button-1.png" alt="버튼 클릭 결과"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/arduino/one-button/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native @realm/react 패키지 적용하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/</guid>
      <pubDate>Thu, 22 Dec 2022 01:18:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;기존에 &lt;a href=&quot;https://flamingotiger.github.io/frontend/ReactNat
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>기존에 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-realm/">relam 관련 포스팅</a>을 남겼었는데 시간이 지나 realm업데이트와 realm이 mongodb로 인수되는 과정을 통해서 많은 부분이 바뀐 것이 있습니다. 그리고 추가로 @realm/react 패키지를 사용해서 더 간편하게 realm을 사용하는 방법과 주의 사항등을 알아보도록 하겠습니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p>react-native v0.70.6에서 작성하였습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save realm @realm/react @types/realm react-native-get-random-values</span><br></pre></td></tr></table></figure><ul><li><code>react-native-get-random-values</code>: BSON랜덤 데이터 생성시 필요</li><li><code>@types/realm</code>: realm type정의된 패키지</li><li><code>realm</code>: realm 패키지</li><li><code>@realm/react</code>: react에서 사용하기 편하게, hooks로 몇가지 메소드가 정의 되어있음</li></ul><p>패키지들을 설치해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ios &amp;&amp; pod install &amp;&amp; cd ..</span><br></pre></td></tr></table></figure><p>ios에 cocoapod을 설치합니다.<br>realm studio설치는 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-realm/">relam 포스팅</a>을 참고해주세요.</p><h2 id="코드-작성"><a href="#코드-작성" class="headerlink" title="코드 작성"></a>코드 작성</h2><p>realm을 이용해서 todo를 만들어보도록 하겠습니다.<br>조건은 다음과 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">todo 리스트를 만든다.</span><br><span class="line">생성과 삭제가 가능하다.</span><br><span class="line">주소들과 이름을 작성할 수 있어야 한다.</span><br></pre></td></tr></table></figure><p>먼저 Todo스키마를 만들어줍니다.</p><figure class="highlight typescript"><figcaption><span>src/db/Todo.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'react-native-get-random-values'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Realm&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> ITodo &#123;</span><br><span class="line">  _id?: <span class="built_in">string</span>;</span><br><span class="line">  text: <span class="built_in">string</span>;</span><br><span class="line">  addresses: IAddress[];</span><br><span class="line">  createdAt?: <span class="built_in">string</span>;</span><br><span class="line">  updatedAt?: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> IAddress &#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> AddressSchema = &#123;</span><br><span class="line">  name: <span class="string">'Address'</span>,</span><br><span class="line">  embedded: <span class="literal">true</span>,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    name: <span class="string">'string'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> TodoSchema = &#123;</span><br><span class="line">  name: <span class="string">'Todo'</span>,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    _id: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;<span class="keyword">new</span> Realm.BSON.ObjectId()&#125;</span>`</span>&#125;,</span><br><span class="line">    text: <span class="string">'string'</span>,</span><br><span class="line">    addresses: &#123;<span class="keyword">type</span>: <span class="string">'list'</span>, objectType: <span class="string">'Address'</span>&#125;,</span><br><span class="line">    createdAt: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()&#125;,</span><br><span class="line">    updatedAt: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  primaryKey: <span class="string">'_id'</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> TodoModel <span class="keyword">extends</span> Realm.Object &#123;</span><br><span class="line">  <span class="keyword">static</span> schema = TodoSchema;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> TodoModel;</span><br></pre></td></tr></table></figure><p>스키마를 만들고나면 realm 초기설정과 함께 스키마를 불러오는 코드를 작성합니다.</p><figure class="highlight typescript"><figcaption><span>src/db/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRealmContext&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"><span class="keyword">import</span> TodoModel <span class="keyword">from</span> <span class="string">'./Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SCHEMA_VERSION = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line">  schema: [TodoModel],</span><br><span class="line">  schemaVersion: SCHEMA_VERSION,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> realmContext = createRealmContext(config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> realmContext;</span><br></pre></td></tr></table></figure><p>초기설정이 되었다면 다음으로 react에 연동해보도록 하겠습니다.<br>AppWrapper를 만들어서 App을 RealmProvider로 감싸줍니다.</p><figure class="highlight typescript"><figcaption><span>AppWrapper.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'./src/db'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AppWrapper = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;RealmProvider&#125; = realmContext;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;RealmProvider&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;<span class="regexp">/RealmProvider&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default AppWrapper;</span></span><br></pre></td></tr></table></figure><p>index.js파일을 수정해줍니다.</p><figure class="highlight javascript"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @format</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;AppRegistry&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;name <span class="keyword">as</span> appName&#125; <span class="keyword">from</span> <span class="string">'./app.json'</span>;</span><br><span class="line"><span class="keyword">import</span> AppWrapper <span class="keyword">from</span> <span class="string">'./AppWrapper'</span>;</span><br><span class="line"></span><br><span class="line">AppRegistry.registerComponent(appName, () =&gt; AppWrapper);</span><br></pre></td></tr></table></figure><p>작성하고 실행을 해보면 다음과 같은 에러가 나옵니다.</p><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-0.png" alt="에러"></p><p><strong>주의</strong> 이때는 embedded가 true로 되어있는 스키마도 config에 넣어주어야 합니다.<br>TodoSchema에 연결되어 있더라도 따로 불러와 주어야 합니다.</p><figure class="highlight typescript"><figcaption><span>src/db/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRealmContext&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"><span class="keyword">import</span> TodoModel, &#123;AddressSchema&#125; <span class="keyword">from</span> <span class="string">'./Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SCHEMA_VERSION = <span class="number">2</span>; <span class="comment">// 디비구조가 바뀌면 버전을 바꿔야합니다. </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line">  schema: [TodoModel, AddressSchema], <span class="comment">// AddressSchema 추가</span></span><br><span class="line">  schemaVersion: SCHEMA_VERSION,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> realmContext = createRealmContext(config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> realmContext;</span><br></pre></td></tr></table></figure><p>스키마에 <code>프로퍼티가 하나라도 바뀔시</code>에는 SCHEMA_VERSION을 바꾸어야합니다. properties의 타입이 추가되거나 바뀌어도 버전을 바꾸어줘야합니다.</p><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Button, SafeAreaView, TextInput, View&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'./src/db'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;useRealm&#125; = realmContext;</span><br><span class="line">  <span class="keyword">const</span> realm = useRealm();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;SafeAreaView&gt;</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;TextInput</span><br><span class="line">          style=&#123;&#123;</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            height: <span class="number">40</span>,</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">          title=<span class="string">"생성"</span></span><br><span class="line">          onPress=&#123;<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(realm.path);</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>SafeAreaView&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>앱 컴포넌트를 작성합니다.</p><h2 id="realm-studio-실행"><a href="#realm-studio-실행" class="headerlink" title="realm studio 실행"></a>realm studio 실행</h2><p>버튼을 누르고 콘솔을 확인해보면 다음과 같은 path가 나옵니다.<br><img src="/image/frontend/ReactNative/react-natvie-realm-react-1.png" alt="path경로"></p><p>터미널을 새로 열고, open 명령어를 이용해서 폴더를 열어줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open /Users/&lt;사용자이름&gt;/Library/Developer/CoreSimulator/Devices/&lt;값&gt;/data/Containers/Data/Application/&lt;값&gt;/Documents/default.realm</span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-2.png" alt="realm studio"></p><h2 id="생성-및-삭제-구현"><a href="#생성-및-삭제-구현" class="headerlink" title="생성 및 삭제 구현"></a>생성 및 삭제 구현</h2><p>useTodo를 생성합니다.<br>realm이 수정되면 자동으로 리렌터링이 되기 때문에 state관리를 따로 하지 않아도 됩니다. state을 수동으로 관리를 하려면 realm을 useRealm이 아닌 직접 realm을 open시켜주어야 합니다.</p><figure class="highlight typescript"><figcaption><span>src/hooks/useTodo.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useCallback&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'../db'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ITodo&#125; <span class="keyword">from</span> <span class="string">'../db/Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useTodo = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;useQuery, useRealm&#125; = realmContext;</span><br><span class="line">  <span class="keyword">const</span> todos: Realm.Results&lt;ITodo&gt; = useQuery&lt;ITodo&gt;(<span class="string">'Todo'</span>);</span><br><span class="line">  <span class="keyword">const</span> realm = useRealm();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> createTodo = useCallback(</span><br><span class="line">    (todo: ITodo) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (!todo.text) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        realm.write(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> t: ITodo = realm.create(<span class="string">'Todo'</span>, &#123;</span><br><span class="line">            text: todo.text,</span><br><span class="line">            addresses: todo.addresses,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`created one todo: <span class="subst">$&#123;t.text&#125;</span>`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Fail create'</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    [realm],</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> deleteTodo = useCallback(</span><br><span class="line">    (_id: <span class="built_in">string</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> todo = realm.objectForPrimaryKey&lt;ITodo&gt;(<span class="string">'Todo'</span>, _id);</span><br><span class="line">        <span class="keyword">if</span> (todo) &#123;</span><br><span class="line">          realm.write(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            realm.delete(todo);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Not found id'</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    [realm],</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> &#123;createTodo, deleteTodo, todos&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useTodo;</span><br></pre></td></tr></table></figure><p>그리고 App을 수정해줍니다.</p><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;useState&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Button,</span><br><span class="line">  FlatList,</span><br><span class="line">  SafeAreaView,</span><br><span class="line">  Text,</span><br><span class="line">  TextInput,</span><br><span class="line">  View,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> useTodo <span class="keyword">from</span> <span class="string">'./src/hooks/useTodo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = useState(<span class="string">''</span>);</span><br><span class="line">  <span class="keyword">const</span> &#123;createTodo, deleteTodo, todos&#125; = useTodo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;SafeAreaView&gt;</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;TextInput</span><br><span class="line">          style=&#123;&#123;</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            height: <span class="number">40</span>,</span><br><span class="line">          &#125;&#125;</span><br><span class="line">          onChangeText=&#123;setText&#125;</span><br><span class="line">          value=&#123;text&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">          title=<span class="string">"생성"</span></span><br><span class="line">          onPress=&#123;<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            createTodo(&#123;</span><br><span class="line">              text,</span><br><span class="line">              addresses: [],</span><br><span class="line">            &#125;);</span><br><span class="line">            setText(<span class="string">''</span>);</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;FlatList</span><br><span class="line">          data=&#123;todos&#125;</span><br><span class="line">          extraData=&#123;todos&#125;</span><br><span class="line">          keyExtractor=&#123;<span class="function"><span class="params">item</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;item._id&#125;</span><span class="subst">$&#123;<span class="built_in">Math</span>.random()&#125;</span>`</span>&#125;</span><br><span class="line">          renderItem=&#123;<span class="function">(<span class="params">&#123;item&#125;</span>) =&gt;</span> (</span><br><span class="line">            &lt;View&gt;</span><br><span class="line">              &lt;Text&gt;&#123;item.text&#125;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">              &lt;Button</span></span><br><span class="line"><span class="regexp">                title="삭제"</span></span><br><span class="line"><span class="regexp">                onPress=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                  if (item._id) &#123;</span></span><br><span class="line"><span class="regexp">                    deleteTodo(item._id);</span></span><br><span class="line"><span class="regexp">                  &#125;</span></span><br><span class="line"><span class="regexp">                &#125;&#125;</span></span><br><span class="line"><span class="regexp">              /</span>&gt;</span><br><span class="line">            &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          )&#125;</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>SafeAreaView&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>앱을 실행시켜줍니다.</p><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-3.gif" alt="결과"></p><h2 id="마무리"><a href="#마무리" class="headerlink" title="마무리"></a>마무리</h2><p>react-native 와 realm 그리고 @realm/react를 같이 사용해보았습니다.<br>다른 자세한 내용은 <a href="https://www.mongodb.com/docs/realm/sdk/react-native/install/" rel="external nofollow noopener noreferrer" target="_blank">공식문서</a>에서 찾아보시면 됩니다.</p><p>공식문서의 예시가 적고 구글에서도 React native에서 realm을 사용하는 사례가 많지 않아서 구현하기 번거로움이 많았습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/#disqus_thread</comments>
    </item>
    
    <item>
      <title>아두이노 블루투스 모듈 사용법 (arduino hm10 module)</title>
      <link>http://flamingotiger.github.io/etc/arduino/hm10-module/</link>
      <guid>http://flamingotiger.github.io/etc/arduino/hm10-module/</guid>
      <pubDate>Mon, 31 Oct 2022 01:53:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하며&quot;&gt;&lt;a href=&quot;#시작하며&quot; class=&quot;headerlink&quot; title=&quot;시작하며&quot;&gt;&lt;/a&gt;시작하며&lt;/h1&gt;&lt;p&gt;아두이노와 블루투스 모듈 hm10을 연결해서 사용하는 방법을 알아보겠습니다.&lt;br&gt;hm10의 모듈에 관한 자세한
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하며"><a href="#시작하며" class="headerlink" title="시작하며"></a>시작하며</h1><p>아두이노와 블루투스 모듈 hm10을 연결해서 사용하는 방법을 알아보겠습니다.<br>hm10의 모듈에 관한 자세한 정보는 <a href="https://people.ece.cornell.edu/land/courses/ece4760/PIC32/uart/HM10/DSD%20TECH%20HM-10%20datasheet.pdf" rel="external nofollow noopener noreferrer" target="_blank">hm10 데이터시트</a>에서 확인할 수 있습니다.</p><p>전체적으로 많이 사용하는 hc06과 hm10 중에 hc06는 블루투스 버전이 2버전으로 낮기 때문에 제가 사용할 웹 블루투스 api에서는 사용할 수 없기 때문에 블루투스 ble 및 4버전을 지원하는 hm10을 사용하기로 했습니다.</p><p>다른 기술 블로그들이나 테스트하는 영상들을 보면 항상 앱 스토어 및 플레이스토어에서 터미널 앱을 설치해서 사용하는 것을 확인 할 수 있었는데, 이건 실질적으로 앱 혹은 웹 프로젝트를 만드는데 있어서 테스트용도일 뿐이지 의미없는 것이라 생각되었습니다. 그래서 직접 구현해 보도록 하겠습니다.</p><h2 id="회로도"><a href="#회로도" class="headerlink" title="회로도"></a>회로도</h2><p>아두이노 회로도는 <a href="https://www.circuito.io/" rel="external nofollow noopener noreferrer" target="_blank">circuito</a>을 통해서 쉽게 연결해볼수 있습니다.</p><p><img src="/image/etc/arduino/hm10-module-0.png" alt="회로도"></p><p>블루투스 모듈을 보면 VCC, GND, TXD, RXD라고 쓰여있습니다.</p><ul><li>VCC: 전압을 나타냅니다.</li><li>GND: 기준전압 입니다. 전기의 기준점이라고 생각하면 됩니다.</li><li>TXD: 데이터 전송을 위한 포트로 디지털 핀에 연결할 수 있습니다.</li><li>RXD: 데이터 수신을 위한 포트로 디지털 핀에 연결할 수 있습니다.</li></ul><ol><li><p>블루투스 모듈의 VCC와 우노의 5V핀과 연결합니다. 전원공급을 하는 것이라고 생각하시면 됩니다.</p></li><li><p>블루투스 모듈의 GND와 우노의 GND핀과 연결합니다.</p></li><li><p>블루투스 모듈의 TXD와 우노의 디지털2핀과 연결합니다.</p></li><li><p>블루투스 모듈의 RXD와 우노의 디지털3핀과 연결합니다.</p></li></ol><p>우노의 디지털핀은 0번-rx, 1번-tx, 2번-rx, 3번-tx…이런 순서로 전송과 수신이라고 생각하고, 모듈과는 반대로 꽂아주어야 합니다.</p><p><code>RX는 수신 TX는 송신일때, 우노와 모듈이 둘다 TX(송신)로 연결하면 수신이 없고, 둘다 RX(수신)으로 연결하면 전송이 없어서 제대로 작동하지 않습니다.</code></p><h2 id="코드-작성"><a href="#코드-작성" class="headerlink" title="코드 작성"></a>코드 작성</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 블루투스 모듈 포트 설정 (HM10)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BT_RXD 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BT_TXD 3</span></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BTSerial</span><span class="params">(BT_RXD, BT_TXD)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);  <span class="comment">// PC에서 모니터링하기 위한 시리얼 통신 시작</span></span><br><span class="line">  BTSerial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(<span class="string">"Bluetooth initial"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="keyword">if</span> (Serial.available()) &#123;</span><br><span class="line">    c = Serial.read();</span><br><span class="line">    BTSerial.print(c);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (BTSerial.available()) &#123;</span><br><span class="line">    c = BTSerial.read();</span><br><span class="line">    Serial.print(c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>공식홈페이지에서 <a href="https://docs.arduino.cc/learn/built-in-libraries/software-serial" rel="external nofollow noopener noreferrer" target="_blank">software-serial</a>의 함수들을 확인 할수 있습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial.begin(<span class="number">9600</span>);  <span class="comment">// PC에서 모니터링하기 위한 시리얼 통신 시작</span></span><br><span class="line">BTSerial.begin(<span class="number">9600</span>);</span><br></pre></td></tr></table></figure><p>블루투스 통신과 우노의 시리얼 통신 속도를 맞추어 주어야합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SoftwareSerial <span class="title">mySerial</span><span class="params">(rxPin, txPin)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="HM10-모듈의-UUID"><a href="#HM10-모듈의-UUID" class="headerlink" title="HM10 모듈의 UUID"></a>HM10 모듈의 UUID</h2><p>블루투스의 ble 통신의 경우 service &gt; characteristic의 구조가 있습니다. 자세한 설명은 다른 블로그 포스트에서 설명하겠습니다.<br>hm10 모듈에서는 블루투스 페어링이후 쓰기 및 읽기에 대한 특성을 제공합니다.<br>블루투스 모듈의 이름을 알거나 수정하기 위해서는 AT command를 이용하면 수정 가능합니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> uuids = &#123;</span><br><span class="line">      serviceUUID = <span class="string">"0000ffe0-0000-1000-8000-00805f9b34fb"</span>, <span class="comment">// service uuid</span></span><br><span class="line">      readUUID = <span class="string">"0000ffe1-0000-1000-8000-00805f9b34fb"</span>, <span class="comment">// characteristic uuid</span></span><br><span class="line">      writeUUID = <span class="string">"0000ffe1-0000-1000-8000-00805f9b34fb"</span> <span class="comment">// characteristic uuid</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AT-통신-옵션"><a href="#AT-통신-옵션" class="headerlink" title="AT 통신(옵션)"></a>AT 통신(옵션)</h2><p><em>맨 처음 HM10관련 데이터 시트에서도 나와있는 내용입니다</em><br>기본 값으로는 블루투스 페어링이 되어있지 않은 상태에서 AT 명령어를 사용할 수 있습니다.<br>다른 외부 기기와 페어링이 된 상태에서 AT명령어를 사용하기 위해서는 mode를 변경해주어야 합니다.</p><p>AT명령어가 되는지 우선 확인을 해보아야합니다.<br><img src="/image/etc/arduino/hm10-module-1.png" alt="AT command"><br>AT를 입력했을때 OK라는 글자가 나와야합니다.</p><h4 id="OK가-안나올때-체크요소"><a href="#OK가-안나올때-체크요소" class="headerlink" title="OK가 안나올때 체크요소"></a>OK가 안나올때 체크요소</h4><ul><li>블루투스 모듈 값을 Serial로 print해주는 코드가 있는지 확인(아래와 같은 코드)</li><li>선이 제대로 연결이 되어있는지 확인.</li><li>다른 라이브러리와 같이 사용하고 있는지 검토 (다른 라이브러리 예를들어, es522랑 사용할때 print가 안되는 이슈가 있었음)</li><li>다른 hm10모듈을 사용해본다.</li><li>블루투스 모듈 관련 코드만 남겨서 테스트를 해본다.</li></ul><p>OK글자가 나오는 원리는 다음과 같습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"> <span class="keyword">if</span> (Serial.available()) &#123;</span><br><span class="line">   c = Serial.read();</span><br><span class="line">   BTSerial.print(c);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> (BTSerial.available()) &#123;</span><br><span class="line">   c = BTSerial.read();</span><br><span class="line">   Serial.print(c);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ol><li>블루투스 모듈의 AT를 터미널창에 입력</li><li><code>Serial.available</code>에서 인식</li><li>시리얼에서 인식한 값을 <code>BTSerial.print(c)</code>을 통해서 블루투스 모듈로 입력</li><li>블루투스 모듈에서 인식한 값을 <code>BTSerial.available</code> 에서 인식</li><li>인식된 값을 시리얼로 출력을 해줍니다.</li></ol><p>영문은 전부 대문자여야 합니다.<br>대부분 현재 상태정보를 확인하기 위해서는 명령어 끝에 ?를 넣습니다.</p><h3 id="이름짓기"><a href="#이름짓기" class="headerlink" title="이름짓기"></a>이름짓기</h3><ul><li>AT+NAME? : 기기 이름이 무엇인지</li><li>AT+NAME<code>HM10</code> : 기기이름을 <code>HM10</code>으로 짓기</li></ul><p><img src="/image/etc/arduino/hm10-module-2.png" alt="이름변경"><br><img src="/image/etc/arduino/hm10-module-3.png" alt="이름변경결과"><br><img src="/image/etc/arduino/hm10-module-4.png" alt="이름확인"><br><img src="/image/etc/arduino/hm10-module-5.png" alt="이름확인결과"></p><h3 id="모드-변경"><a href="#모드-변경" class="headerlink" title="모드 변경"></a>모드 변경</h3><ul><li>AT+MODE? : 기기모드 확인</li><li>AT+MODE<code>1</code> : 기기모드를 <code>1</code>로 변경</li></ul>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/arduino/hm10-module/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RFID 하이퍼 터미널 테스트(mac OS)</title>
      <link>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/</link>
      <guid>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/</guid>
      <pubDate>Fri, 10 Jun 2022 08:08:30 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;RFID-구매&quot;&gt;&lt;a href=&quot;#RFID-구매&quot; class=&quot;headerlink&quot; title=&quot;RFID 구매&quot;&gt;&lt;/a&gt;RFID 구매&lt;/h1&gt;&lt;p&gt;맥에서 RFID를 테스트 해보기 위해서 RFID 리더기를 구매하였다. 그런데 USB를 연결
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="RFID-구매"><a href="#RFID-구매" class="headerlink" title="RFID 구매"></a>RFID 구매</h1><p>맥에서 RFID를 테스트 해보기 위해서 RFID 리더기를 구매하였다. 그런데 USB를 연결하고 터치를 해도 값이 나오지 않았다. 연결이 제대로 되었는지 확인하기 위해서 하이퍼 터미널로 테스트를 해보려고 한다.</p><h2 id="하이퍼-터미널"><a href="#하이퍼-터미널" class="headerlink" title="하이퍼 터미널"></a>하이퍼 터미널</h2><p>윈도우에서는 하이퍼 터미널이 따로 있지만 맥에서는 따로 존재하지 않고 터미널을 통해서 사용할 수 있다.<br>터미널 프로그램에서 <code>screen</code>을 사용하면 시리얼 터미널 프로그램으로 사용할 수 있다.<br>사용하는 방법은 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen [연결된 USB 디바이스 이름] [통신속도]</span><br></pre></td></tr></table></figure><p>통신속도: 110, 300, 120, 2400, 4800, 9600, 1440, 19200, 28800, 38400, 57600, 115200를 예시로 들 수 있다.</p><h2 id="테스트-시작"><a href="#테스트-시작" class="headerlink" title="테스트 시작"></a>테스트 시작</h2><p>터미널을 열고 /dev 디렉터리로 진입한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /dev</span><br></pre></td></tr></table></figure><p>/dev파일에 드라이버가 설치되거나 자동으로 인식된다.</p><p>/dev 디렉토리에서 연결된 usb를 찾아야합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>이름은 주로 <code>tty.usbserial-*</code>형식이거나 <code>*.usbserial.*</code>형식으로 되어있습니다.<br><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-0.png" alt="리스트"></p><p>파일 명을 찾았으면 다음과 같이 터미널에 입력합니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-1.png" alt="실행 명령어"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen /dev/tty.usbserial-0001 9600</span><br></pre></td></tr></table></figure><p>그러면 빈 터미널이 나오는데 실행이 완료된 것 입니다.<br>이후 rfid 카드를 리더기에 인식해보면 값이 나오는 것을 확인할 수 있습니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-2.png" alt="테스트"></p><h2 id="screen-명령어-오류시"><a href="#screen-명령어-오류시" class="headerlink" title="screen 명령어 오류시"></a>screen 명령어 오류시</h2><p>screen /dev/tty.usbserial-0001 9600  이렇게 명령어를 입력했는데 다음과 같은 오류가 난 경우는 이미 하이퍼 터미널이 실행되어있다는 것입니다.<br><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-3.png" alt="오류"><br>현재 실행되어있는 screen이 있는지 확인하기 위해서 다음과 같이 명령어를 입력해 줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -ls</span><br></pre></td></tr></table></figure><p>그러면 다음같이 <code>There is a screen on:~</code> 이렇게 텍스트가 나오는데 현재 실행되어있는 screen을 보여주고 있는 것입니다.<br>켜져있는 터미널을 실행하기 위해 바로 아래에 <code>*.ttys000.*</code>를 복사합니다.<br>그리고 다음 명령어를 입력합니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-4.png" alt="실행"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r [복사한 스크린]</span><br></pre></td></tr></table></figure><p>그러면 정상적으로 실행되는 것을 확인할 수 있습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/#disqus_thread</comments>
    </item>
    
    <item>
      <title>M1칩 mac에서 React native android 실행시 &#39;Caused by java.io.IOException Cannot run program &quot;node&quot;&#39;에러</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/</guid>
      <pubDate>Fri, 04 Feb 2022 02:44:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React native 공식홈페이지에서 나와 있는데로 프로그램 셋팅을 하고, 프로젝트를 안드로이드 스튜디오로 켰
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React native 공식홈페이지에서 나와 있는데로 프로그램 셋팅을 하고, 프로젝트를 안드로이드 스튜디오로 켰을때 <code>Caused by: java.io.IOException: Cannot run program &quot;node&quot;</code>에러가 나왔습니다. 이때 해결방법을 찾아보았습니다.</p><p>이 문제가 m1칩이 탑재된 맥에서 나오는 것으로 알고 있습니다.<br>해결방법은 간단합니다.</p><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><p>환경구성을 안했다면 먼저 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-setup/">React native 초기 설치하기</a>포스트에서 안드로이드 환경변수 설정을 먼저 해주도록 합니다.</p><p>환경변수 설정을 해도 에러가 나온다면, 다음 솔루션을 진행합니다.<br>터미널을 켜서 다음 명령어를 실행해줍니다. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /Applications/Android\ Studio.app/Contents/bin/printenv</span><br></pre></td></tr></table></figure><p>이후 안드로이드 스튜디오를 종료하고 다시 프로젝트를 열면 정상적으로 작동하는 것을 확인할 수 있습니다.</p><h2 id="참고사이트"><a href="#참고사이트" class="headerlink" title="참고사이트"></a>참고사이트</h2><p><a href="https://github.com/react-native-community/cli/issues/1457" rel="external nofollow noopener noreferrer" target="_blank">Gradle sync stop working with “Cannot run program “node” message #1457 깃헙참고 사이트</a></p><p><a href="https://stackoverflow.com/questions/61922174/react-native-on-android-cannot-run-program-node-error-2-no-such-file-or-dir/70891538#70891538" rel="external nofollow noopener noreferrer" target="_blank">stackoverflow</a></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pod install시 [IMPORTANT] Don&#39;t forget to include the Crash Report log file under DiagnosticReports directory in bug reports 에러 발생시</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/</guid>
      <pubDate>Wed, 26 Jan 2022 03:47:52 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React Native 프로젝트에서 패키지를 추가 하고 나서 pod install 명령어를 입력해서 패키지를 설
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React Native 프로젝트에서 패키지를 추가 하고 나서 pod install 명령어를 입력해서 패키지를 설치하려고 했는데,<br>다음과 같은 에러가 나왔다.<br><code>[IMPORTANT] Don&#39;t forget to include the Crash Report log file under DiagnosticReports directory in bug reports.</code><br>해결책은 간단합니다.(m1 맥미니, Monterey, node v14.17.0버전에서 테스트를 했습니다.)<br><img src="/image/frontend/ReactNative/react-native-pod-install-error-0.png" alt="에러"></p><h2 id="솔루션"><a href="#솔루션" class="headerlink" title="솔루션"></a>솔루션</h2><p><a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/">React native 초기 설정하기</a>에서 포스팅한것처럼 rosetta 터미널에서 pod install 명령입력해주면 정상적으로 설치되는 것을 확인 할 수 있습니다.</p><h3 id="느낀점"><a href="#느낀점" class="headerlink" title="느낀점"></a>느낀점</h3><p>React native에서 패키지를 설치하거나 환경설정을 해야할때 터미널을 이용한다면 rosetta를 이용하는 편이 마음이 편하다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native Permissions 사용하여 권한 확인하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/</guid>
      <pubDate>Fri, 14 Jan 2022 08:42:21 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React native permissions 라이브러리를 통해서 이 기기에서 권한이 허용되었는지 여부를 체크할 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React native permissions 라이브러리를 통해서 이 기기에서 권한이 허용되었는지 여부를 체크할 수 있습니다.<br>안드로이드에서는 React native에 내장된 <a href="https://reactnative.dev/docs/permissionsandroid" rel="external nofollow noopener noreferrer" target="_blank">PermissionsAndroid</a> 를 사용하는 방법도 있습니다.<br>IOS는 React native 공식문서에 따로 기재되어있지 않아서 공통적으로 권한 관리를 하기 위해서 react native permissions을 사용하도록 하겠습니다.</p><h2 id="설치-및-환경설정"><a href="#설치-및-환경설정" class="headerlink" title="설치 및 환경설정"></a>설치 및 환경설정</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-native-permissions</span><br></pre></td></tr></table></figure><p>react-native-permissions 패키지를 설치해줍니다.<br>이후에 Podfile을 수정해줍니다.</p><figure class="highlight ruby"><figcaption><span>Podfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">target <span class="string">'YourAwesomeProject'</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># …</span></span><br><span class="line">  permissions_path = <span class="string">'../node_modules/react-native-permissions/ios'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨</span></span><br><span class="line">  pod <span class="string">'Permission-AppTrackingTransparency'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/AppTrackingTransparency"</span></span><br><span class="line">  pod <span class="string">'Permission-BluetoothPeripheral'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/BluetoothPeripheral"</span></span><br><span class="line">  pod <span class="string">'Permission-Calendars'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Calendars"</span></span><br><span class="line">  pod <span class="string">'Permission-Camera'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Camera"</span></span><br><span class="line">  pod <span class="string">'Permission-Contacts'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Contacts"</span></span><br><span class="line">  pod <span class="string">'Permission-FaceID'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/FaceID"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationAccuracy'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationAccuracy"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationAlways'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationAlways"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationWhenInUse'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationWhenInUse"</span></span><br><span class="line">  pod <span class="string">'Permission-MediaLibrary'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/MediaLibrary"</span></span><br><span class="line">  pod <span class="string">'Permission-Microphone'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Microphone"</span></span><br><span class="line">  pod <span class="string">'Permission-Motion'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Motion"</span></span><br><span class="line">  pod <span class="string">'Permission-Notifications'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Notifications"</span></span><br><span class="line">  pod <span class="string">'Permission-PhotoLibrary'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/PhotoLibrary"</span></span><br><span class="line">  pod <span class="string">'Permission-PhotoLibraryAddOnly'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/PhotoLibraryAddOnly"</span></span><br><span class="line">  pod <span class="string">'Permission-Reminders'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Reminders"</span></span><br><span class="line">  pod <span class="string">'Permission-Siri'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Siri"</span></span><br><span class="line">  pod <span class="string">'Permission-SpeechRecognition'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/SpeechRecognition"</span></span><br><span class="line">  pod <span class="string">'Permission-StoreKit'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/StoreKit"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><figcaption><span>Info.plist</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAppleMusicUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSBluetoothAlwaysUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSBluetoothPeripheralUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCalendarsUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCameraUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSContactsUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSFaceIDUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationAlwaysAndWhenInUseUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationAlwaysUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationTemporaryUsageDescriptionDictionary<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>YOUR-PURPOSE-KEY<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationWhenInUseUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSMicrophoneUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSMotionUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryAddUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSRemindersUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSSpeechRecognitionUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSSiriUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSUserTrackingUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- … --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">package</span>=<span class="string">"com.myawesomeapp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCEPT_HANDOVER"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_BACKGROUND_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_MEDIA_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACTIVITY_RECOGNITION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ANSWER_PHONE_CALLS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADVERTISE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_CONNECT"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_SCAN"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BODY_SENSORS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CALL_PHONE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_ACCOUNTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.PROCESS_OUTGOING_CALLS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALENDAR"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALL_LOG"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CONTACTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_NUMBERS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_MMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_WAP_PUSH"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SEND_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.USE_SIP"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALENDAR"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALL_LOG"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.voicemail.permission.ADD_VOICEMAIL"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- … --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="사용하기"><a href="#사용하기" class="headerlink" title="사용하기"></a>사용하기</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Platform &#125; <span class="keyword">from</span> <span class="string">"react-native"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; PERMISSIONS, RESULTS, request &#125; <span class="keyword">from</span> <span class="string">"react-native-permissions"</span>;</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> permissionCheck = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.OS !== <span class="string">"ios"</span> &amp;&amp; Platform.OS !== <span class="string">"android"</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> platformPermissions =</span><br><span class="line">      Platform.OS === <span class="string">"ios"</span></span><br><span class="line">        ? PERMISSIONS.IOS.CAMERA</span><br><span class="line">        : PERMISSIONS.ANDROID.CAMERA;</span><br><span class="line">    <span class="keyword">const</span> requestCameraPermission = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> request(platformPermissions);</span><br><span class="line">        result === RESULTS.GRANTED</span><br><span class="line">          ? setOpenScanner(<span class="literal">true</span>)</span><br><span class="line">          : Alert.alert(<span class="string">"카메라 권한을 허용해주세요"</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        Alert.alert(<span class="string">"Camera permission err"</span>);</span><br><span class="line">        <span class="built_in">console</span>.warn(err);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    requestCameraPermission();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []);</span><br></pre></td></tr></table></figure><h2 id="번외"><a href="#번외" class="headerlink" title="번외"></a>번외</h2><p>Android react native PermissionsAndroid 사용해보는 방법도 알아보겠습니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Platform,</span><br><span class="line">  PermissionsAndroid,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.OS === <span class="string">'android'</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> requestCameraPermission = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> granted = <span class="keyword">await</span> PermissionsAndroid.request(</span><br><span class="line">            PermissionsAndroid.PERMISSIONS.CAMERA,</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">'Camera Permission'</span>,</span><br><span class="line">              message: <span class="string">'App needs permission for camera access'</span>,</span><br><span class="line">              buttonPositive: <span class="string">'OK'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          );</span><br><span class="line">          <span class="keyword">if</span>(granted === PermissionsAndroid.RESULTS.GRANTED)&#123;</span><br><span class="line">Alert.alert(‘success’);</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">Alert.alert(‘Please camera permission’);</span><br><span class="line">   &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          Alert.alert(<span class="string">'Camera permission err'</span>);</span><br><span class="line">          <span class="built_in">console</span>.warn(err);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      requestCameraPermission();</span><br><span class="line">&#125;</span><br><span class="line">&#125;,[]);</span><br></pre></td></tr></table></figure><h2 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h2><p>시뮬레이터에서 테스트를 해보겠습니다.</p><p>설정에서 허용안함을 해보겠습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-0.png" alt="카메라 허용안함"></p><p>카메라 작동이 안되는 것을 확인할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-1.png" alt="카메라 작동 오류"></p><p>다시 카메라를 허용하면,<br><img src="/image/frontend/ReactNative/react-native-permissions-2.png" alt="카메라 허용"></p><p>카메라가 다시 작동하는 것을 확인할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-3.png" alt="카메라 작동"></p><h2 id="에러시"><a href="#에러시" class="headerlink" title="에러시"></a>에러시</h2><p>No permission handler detected 에러가 나온다면 Xcode -&gt; Product -&gt; Clean Build Folder 작업을 한번 해주세요</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native QRcode scanner 사용하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/</guid>
      <pubDate>Thu, 13 Jan 2022 06:57:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;react-native 앱에서 QR코드를 스캔할 수 있는 스캐너를 라이브러리를 이용하여 구현해보도록 하겠습니다.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>react-native 앱에서 QR코드를 스캔할 수 있는 스캐너를 라이브러리를 이용하여 구현해보도록 하겠습니다.<br>사용한 버전은 다음과 같습니다.</p><p>Xcode: 12.5</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"react"</span>: <span class="string">"17.0.2"</span>,</span><br><span class="line">  <span class="attr">"react-native"</span>: <span class="string">"0.66.4"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="라이브러리-정하기"><a href="#라이브러리-정하기" class="headerlink" title="라이브러리 정하기"></a>라이브러리 정하기</h2><p>수많은 라이브러리 중 결론부터 말하자면 react-native-camera-kit라이브러리를 사용할 것입니다.<br>이 라이브러리를 정한 이유는 아래에 나와있습니다.</p><p>QR코드 스캐너 라이브러리</p><ul><li>react-native-qrcode-scanner ❌ (react-native-camera)<br>카메라 라이브러리필요</li></ul><p>QR코드를 스캔하기 위해서 우선 스마트폰의 카메라 설치해야합니다.</p><p>카메라 라이브러리로는</p><ul><li>react-native-camera ❌</li><li>react-native-vision-camera ❌</li><li>react-native-camera-kit ✅<br>이렇게 세가지가 많이 사용되는 것으로 보입니다.</li></ul><p>현시점에서 react-native-camera는 deprecated가 되어 더이상 업데이트가 없어서 사용하지 않습니다.<br>그러므로 react-native-camera와 react-native-recode-scanner는 사용할 수 없습니다.</p><p>react-native-camera 깃헙에서 react-native-vision-camera 라이브러리가 더 기능이 추가되고 성능이 향상되었다고 설명하며 링크가 연결되어 있습니다.<br>다만, 지금은 react-native 처음 초기 설정이후 라이브러리 설치후 빌드에서 에러가 나오는 현상이 유지되고 있기 때문에 사용하기는 어렵다고 판단이 됩니다.<br>(관련링크 <a href="https://github.com/mrousavy/react-native-vision-camera/issues/716" rel="external nofollow noopener noreferrer" target="_blank">이슈</a>)<br>그래서 사용하기도 간편하고 쉬운 <code>react-native-camera-kit</code>라이브러리를 사용할 예정입니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p><a href="https://github.com/teslamotors/react-native-camera-kit" rel="external nofollow noopener noreferrer" target="_blank">react-native-camera-kit 깃헙 링크</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install react-native-camera-kit --save &amp;&amp; cd ios &amp;&amp; pod install &amp;&amp; cd ..</span><br></pre></td></tr></table></figure><p>위에 명령어를 사용해서 라이브러리를 설치하고 ios파일에서 pod패키지를 설치하고 다시 루트로 돌아옵니다.</p><h2 id="카메라-권한-허용해주기"><a href="#카메라-권한-허용해주기" class="headerlink" title="카메라 권한 허용해주기"></a>카메라 권한 허용해주기</h2><p>카메라를 이용하기 위해서는 권한을 허용해주어야 사용할 수 있습니다.</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>루트 경로에서 android/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>루트 경로에서 ios/PROJECT_NAME/Info.list<br>다음 값을 추가해줍니다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCameraUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>For taking photos<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>For saving photos<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="사용하기"><a href="#사용하기" class="headerlink" title="사용하기"></a>사용하기</h3><p>스캐너 컴포넌트를 생성합니다.</p><figure class="highlight typescript"><figcaption><span>QRCodeScanner.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Alert,</span><br><span class="line">  Button,</span><br><span class="line">  Dimensions,</span><br><span class="line">  StyleSheet,</span><br><span class="line">  Vibration,</span><br><span class="line">  View,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"react-native"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Camera, CameraType &#125; <span class="keyword">from</span> <span class="string">"react-native-camera-kit"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> QRCodeScanner = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [scaned, setScaned] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> ref = useRef(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 종료후 재시작을 했을때 초기화</span></span><br><span class="line">    setScaned(<span class="literal">true</span>);</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> onBarCodeRead = <span class="function">(<span class="params">event: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!scaned) <span class="keyword">return</span>;</span><br><span class="line">    setScaned(<span class="literal">false</span>);</span><br><span class="line">    Vibration.vibrate();</span><br><span class="line">    Alert.alert(<span class="string">"QR Code"</span>, event.nativeEvent.codeStringValue, [</span><br><span class="line">      &#123; text: <span class="string">"OK"</span>, onPress: <span class="function"><span class="params">()</span> =&gt;</span> setScaned(<span class="literal">true</span>) &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">      &lt;Camera</span><br><span class="line">        style=&#123;styles.scanner&#125;</span><br><span class="line">        ref=&#123;ref&#125;</span><br><span class="line">        cameraType=&#123;CameraType.Back&#125; <span class="comment">// Front/Back(default)</span></span><br><span class="line">        zoomMode</span><br><span class="line">        focusMode</span><br><span class="line">        <span class="comment">// Barcode Scanner Props</span></span><br><span class="line">        scanBarcode</span><br><span class="line">        showFrame=&#123;<span class="literal">false</span>&#125;</span><br><span class="line">        laserColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        frameColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        surfaceColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        onReadCode=&#123;onBarCodeRead&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  container: &#123;</span></span><br><span class="line"><span class="regexp">    flex: 1,</span></span><br><span class="line"><span class="regexp">    width: Dimensions.get("window").width,</span></span><br><span class="line"><span class="regexp">    height: Dimensions.get("window").height,</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  scanner: &#123; flex: 1 &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br><span class="line"><span class="regexp">export default QRCodeScanner;</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View&gt;</span><br><span class="line">      &lt;QRCodeScanner /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-native-qrcode-scanner-0.gif" alt="실행화면"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iOS 빌드시 xcode doesn&#39;t support project&#39;s IOS 에러 해결하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/</guid>
      <pubDate>Thu, 13 Jan 2022 06:02:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;아이폰에서 시뮬레이션하기 위해서 빌드하기 버튼을 클릭했는데, &lt;code&gt;xcode doesn&amp;#39;t supp
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>아이폰에서 시뮬레이션하기 위해서 빌드하기 버튼을 클릭했는데, <code>xcode doesn&#39;t support project&#39;s IOS 15.1(19B74)</code>라는 에러가 발생했습니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-0.png" alt="오류 메세지"></p><p>이것은 xcode가 아이폰의 소프트웨어 버전인 15.1을 호환하지 않는다는 이야기 입니다.<br>그렇다면 xcode를 설치해야겠죠?<br>아이폰의 최신버전 15.0 이상에서 빌드를 하기 위해서는 Xcode 13 버전이 필요합니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-3.png" alt="version"><br><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-4.png" alt="version"></p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-1.png" alt="app store"></p><p>xcode를 업데이트 하려면 mac버전도 업데이트 해야합니다. (현재 Big Sur)<br>Mac bigsur버전이라면 xcode13버전을 설치할 수 없기 때문에 mac을 monterey버전으로 업데이트 해주어야 합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-2.png" alt="mac version update"></p><p>xcode13버전은 Appstore에서 설치 및 업데이트 할 수 있습니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><ol><li>Mac이 monterey버전으로 업데이트 해야한다.</li><li>xcode가 13버전 이상으로 업데이트 되어야한다.</li></ol><p>현재 아이폰의 버전이 14버전이면 xcode를 13버전으로 업데이트 하지 않아도 에러가 나오지 않습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native 아이폰에 빌드해서 테스트하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/</guid>
      <pubDate>Thu, 13 Jan 2022 05:51:16 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;환경설정&quot;&gt;&lt;a href=&quot;#환경설정&quot; class=&quot;headerlink&quot; title=&quot;환경설정&quot;&gt;&lt;/a&gt;환경설정&lt;/h1&gt;&lt;p&gt;시뮬레이터가 아니라 카메라나 실제로 아이폰에 옮겨서 테스트를 해보기 위한 방법입니다.&lt;/p&gt;
&lt;h2 id=&quot;애플
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h1><p>시뮬레이터가 아니라 카메라나 실제로 아이폰에 옮겨서 테스트를 해보기 위한 방법입니다.</p><h2 id="애플-계정등록"><a href="#애플-계정등록" class="headerlink" title="애플 계정등록"></a>애플 계정등록</h2><p>이전에는 애플 개발자 계정으로만 가능했었는데, 현재는 일반 애플 사용자 계정으로 로그인을 해서 빌드 할 수 있게 되었습니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-0.png" alt="preferences"></p><p><img src="/image/frontend/ReactNative/react-native-ios-build-1.png" alt="accounts 탭"></p><p>accounts에 들어가서 애플 계정을 추가해줍니다.</p><p>이후 프로젝트가 열려있는 Xcode에 들어가서 targets &gt; 내프로그램명 &gt; Signing &amp; Capabilities 탭을 선택합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-2.png" alt="Signing &amp; Capabilities 탭"></p><p>그리고 signing부분의 team에서 아까 추가한 애플계정을 선택합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-3.png" alt="team"></p><h1 id="빌드하기"><a href="#빌드하기" class="headerlink" title="빌드하기"></a>빌드하기</h1><p>아이폰이 맥에 연결된 상태에서 시뮬레이터로 설정된것을 내 아이폰으로 설정하고 왼쪽 상단에 플레이 버튼을 누릅니다.<br>에러가 나지 않는다면 정상적으로 아이폰에 설치됩니다.</p><p>xcode doesn’t support 에러가 나오면서 빌드가 안되면,<a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/">xcode doesn’t support 에러시 해결</a>을 참고 해주세요.</p><p>아이폰에서 신뢰할 수 없는 개발자라는 팝업이 나오면, 다음 경로에서 신뢰 버튼을 클릭해주어야 합니다.</p><p><code>설정 &gt; 일반 &gt; VPN 및 기기관리 &gt; 개발자이메일 &gt; 해당하는 프로젝트 &gt; 신뢰</code><br><img src="/image/frontend/ReactNative/react-native-ios-build-4.png" alt="vpn 및 기기 관리"></p><p>이후 앱을 실행하면 잘 작동하게 됩니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-5.png" alt="어플 작동 화면"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mac m1에서 react native 빌드 에러 The linked library &#39;libPods-ProjectName.a&#39; is missing one or morearchitectures required by this target x86_64</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/</guid>
      <pubDate>Tue, 14 Dec 2021 05:42:58 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;mac m1에서 프로젝트를 생성한 이후 ios에서 빌드를 했을 때 &lt;code&gt;Apple Silicon M1 - 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>mac m1에서 프로젝트를 생성한 이후 ios에서 빌드를 했을 때 <code>Apple Silicon M1 - The linked library &#39;libPods-ProjectName.a&#39; is missing one or more architectures required by this target: x86_64</code>와 같은 에러가 나와서 빌드가 안되는 경우가 있습니다.<br>해결방법은 정말 간단합니다.</p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>xcode를 연이후에 프로젝트에서 build setting을 선택합니다.<br>이후 <code>Excluded architactures</code>에서 debug release에 <code>arm64</code>를 추가해줍니다. 추가하는 방법은 다음과 같습니다.</p><p><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-0.png" alt="step1"><br><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-1.png" alt="step2"><br><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-2.png" alt="step3"></p><p>이후 빌드를 해보면 잘 작동하는 것을 확인할 수 있습니다.</p><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><p><a href="https://stackoverflow.com/questions/65364886/react-native-on-apple-silicon-m1-the-linked-library-libpods-projectname-a-is" rel="external nofollow noopener noreferrer" target="_blank">스택오버플로우</a></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>M1 mac에서 React native 초기 설치시 에러 해결하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/</guid>
      <pubDate>Fri, 10 Dec 2021 07:39:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;리액트 네이티브 초기 설정하는 방법은 다음 링크에서 확인할 수 있습니다.&lt;br&gt;&lt;a href=&quot;https://f
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>리액트 네이티브 초기 설정하는 방법은 다음 링크에서 확인할 수 있습니다.<br><a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-setup/">초기 설정</a><br>초기 설정 방법 대로 했는데 ios에서 에러가 날 경우 해결 방법입니다.</p><p>m1 맥미니, Big sur, node v14.17.0버전에서 테스트를 했습니다.</p><h2 id="ios-에러"><a href="#ios-에러" class="headerlink" title="ios 에러"></a>ios 에러</h2><p>처음에 설치를 하고 <code>npx react-native init MyApp --template react-native-template-typescript</code>명령어를 실행했는데 ios부분에서 에러가 난다면 몇가지 시도를 해볼 수 있습니다.</p><h3 id="rosetta"><a href="#rosetta" class="headerlink" title="rosetta"></a>rosetta</h3><p>로제타를 자주 사용할 것이기 때문에 로제타 터미널을 복제해서 생성합니다.<br><img src="/image/frontend/ReactNative/react-native-install-error-0.png" alt="유틸리티"><br><img src="/image/frontend/ReactNative/react-native-install-error-1.png" alt="정보보기"><br><img src="/image/frontend/ReactNative/react-native-install-error-2.png" alt="설정"></p><h3 id="cocoapods-설치"><a href="#cocoapods-설치" class="headerlink" title="cocoapods 설치"></a>cocoapods 설치</h3><p>코코아팟은 npm과 같이 의존성 관리하는 패키지 입니다.<br>FFI는 Foreign Function Interface의 줄임말로, Ruby-FFI는 다른 언어의 동적 링크 네이티브 라이브러리를 읽어와서 루비 코드로 실행할 수 있게 해주는 라이브러리입니다. 이 라이브러리를 설치하면 빅서 혹은 m1에서 나오는 에러가 해결되는 경우도 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br><span class="line">sudo gem install ffi</span><br></pre></td></tr></table></figure><h3 id="기존-레거시-삭제"><a href="#기존-레거시-삭제" class="headerlink" title="기존 레거시 삭제"></a>기존 레거시 삭제</h3><p>기존 레거시는 삭제 시키고 다시 설치<br>레거시 react-native-cli에서는 해당 템플릿을 사용할 수 없고 새로운 CLI에서만 사용할 수 있다고 한다.<br>기존의 cli를 제거하고 npx를 이용하거나 npx를 이용하고 싶지 않다면 새로운 cli를 전역으로 설치해야 한다. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g react-native-cli</span><br><span class="line">npm i -g @react-native-community/cli</span><br><span class="line">npx react-native init MyApp --template react-native-template-typescript</span><br></pre></td></tr></table></figure><p>이후에 실행시켜봅니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run ios</span><br></pre></td></tr></table></figure><h3 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h3><p>설치와 실행이 잘 되는 것을 확인 할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-install-error-3.png" alt="결과"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>사용중인 포트 프로세스 찾아서 종료시키기</title>
      <link>http://flamingotiger.github.io/etc/etc/kill-port/</link>
      <guid>http://flamingotiger.github.io/etc/etc/kill-port/</guid>
      <pubDate>Mon, 29 Nov 2021 03:51:31 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h1&gt;&lt;p&gt;프로젝트에서 서버를 &lt;code&gt;npm run dev&lt;/code&gt; &lt;code&gt;npm run start&lt;/code&gt;를 통해서 실행
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h1><p>프로젝트에서 서버를 <code>npm run dev</code> <code>npm run start</code>를 통해서 실행했을때, 사용하지 않아도 실행되어있는 경우가 있다.<br>일반적으로 8080과 3000을 많이 사용하는데, 실행이 안된다면, 포트 프로세스를 종료시키는 방법을 사용하면 된다.</p><h1 id="해결책"><a href="#해결책" class="headerlink" title="해결책"></a>해결책</h1><p>8080포트가 접속중인지 확인해 본다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i tcp:8080</span><br></pre></td></tr></table></figure><p>다음 명령어소 8080포트를 종료시킨다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill $(lsof -t -i:8080)</span><br></pre></td></tr></table></figure><p>다른 포트를 확인 및 종료시키고 싶다면 8080부분을 다른 포트로 변경해서 사용하면된다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/etc/kill-port/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
