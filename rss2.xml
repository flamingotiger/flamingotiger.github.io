<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>플타 앞발자의 삽질로그</title>
    <link>http://flamingotiger.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>프론트엔드 개발 혹은 공부하면서 기록하는 블로그입니다. TypeScript, React를 주로 선호합니다.</description>
    <pubDate>Thu, 22 Dec 2022 06:19:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>React native @realm/react 패키지 적용하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/</guid>
      <pubDate>Thu, 22 Dec 2022 01:18:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;기존에 &lt;a href=&quot;https://flamingotiger.github.io/frontend/ReactNat
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>기존에 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-realm/">relam 관련 포스팅</a>을 남겼었는데 시간이 지나 realm업데이트와 realm이 mongodb로 인수되는 과정을 통해서 많은 부분이 바뀐 것이 있습니다. 그리고 추가로 @realm/react 패키지를 사용해서 더 간편하게 realm을 사용하는 방법과 주의 사항등을 알아보도록 하겠습니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p>react-native v0.70.6에서 작성하였습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save realm @realm/react @types/realm react-native-get-random-values</span><br></pre></td></tr></table></figure><ul><li><code>react-native-get-random-values</code>: BSON랜덤 데이터 생성시 필요</li><li><code>@types/realm</code>: realm type정의된 패키지</li><li><code>realm</code>: realm 패키지</li><li><code>@realm/react</code>: react에서 사용하기 편하게, hooks로 몇가지 메소드가 정의 되어있음</li></ul><p>패키지들을 설치해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ios &amp;&amp; pod install &amp;&amp; cd ..</span><br></pre></td></tr></table></figure><p>ios에 cocoapod을 설치합니다.<br>realm studio설치는 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-realm/">relam 포스팅</a>을 참고해주세요.</p><h2 id="코드-작성"><a href="#코드-작성" class="headerlink" title="코드 작성"></a>코드 작성</h2><p>realm을 이용해서 todo를 만들어보도록 하겠습니다.<br>조건은 다음과 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">todo 리스트를 만든다.</span><br><span class="line">생성과 삭제가 가능하다.</span><br><span class="line">주소들과 이름을 작성할 수 있어야 한다.</span><br></pre></td></tr></table></figure><p>먼저 Todo스키마를 만들어줍니다.</p><figure class="highlight typescript"><figcaption><span>src/db/Todo.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'react-native-get-random-values'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Realm&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> ITodo &#123;</span><br><span class="line">  _id?: <span class="built_in">string</span>;</span><br><span class="line">  text: <span class="built_in">string</span>;</span><br><span class="line">  addresses: IAddress[];</span><br><span class="line">  createdAt?: <span class="built_in">string</span>;</span><br><span class="line">  updatedAt?: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> IAddress &#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> AddressSchema = &#123;</span><br><span class="line">  name: <span class="string">'Address'</span>,</span><br><span class="line">  embedded: <span class="literal">true</span>,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    name: <span class="string">'string'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> TodoSchema = &#123;</span><br><span class="line">  name: <span class="string">'Todo'</span>,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    _id: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;<span class="keyword">new</span> Realm.BSON.ObjectId()&#125;</span>`</span>&#125;,</span><br><span class="line">    text: <span class="string">'string'</span>,</span><br><span class="line">    addresses: &#123;<span class="keyword">type</span>: <span class="string">'list'</span>, objectType: <span class="string">'Address'</span>&#125;,</span><br><span class="line">    createdAt: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()&#125;,</span><br><span class="line">    updatedAt: &#123;<span class="keyword">type</span>: <span class="string">'string'</span>, <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  primaryKey: <span class="string">'_id'</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> TodoModel <span class="keyword">extends</span> Realm.Object &#123;</span><br><span class="line">  <span class="keyword">static</span> schema = TodoSchema;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> TodoModel;</span><br></pre></td></tr></table></figure><p>스키마를 만들고나면 realm 초기설정과 함께 스키마를 불러오는 코드를 작성합니다.</p><figure class="highlight typescript"><figcaption><span>src/db/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRealmContext&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"><span class="keyword">import</span> TodoModel <span class="keyword">from</span> <span class="string">'./Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SCHEMA_VERSION = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line">  schema: [TodoModel],</span><br><span class="line">  schemaVersion: SCHEMA_VERSION,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> realmContext = createRealmContext(config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> realmContext;</span><br></pre></td></tr></table></figure><p>초기설정이 되었다면 다음으로 react에 연동해보도록 하겠습니다.<br>AppWrapper를 만들어서 App을 RealmProvider로 감싸줍니다.</p><figure class="highlight typescript"><figcaption><span>AppWrapper.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'./src/db'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AppWrapper = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;RealmProvider&#125; = realmContext;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;RealmProvider&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;<span class="regexp">/RealmProvider&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default AppWrapper;</span></span><br></pre></td></tr></table></figure><p>index.js파일을 수정해줍니다.</p><figure class="highlight javascript"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @format</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;AppRegistry&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;name <span class="keyword">as</span> appName&#125; <span class="keyword">from</span> <span class="string">'./app.json'</span>;</span><br><span class="line"><span class="keyword">import</span> AppWrapper <span class="keyword">from</span> <span class="string">'./AppWrapper'</span>;</span><br><span class="line"></span><br><span class="line">AppRegistry.registerComponent(appName, () =&gt; AppWrapper);</span><br></pre></td></tr></table></figure><p>작성하고 실행을 해보면 다음과 같은 에러가 나옵니다.</p><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-0.png" alt="에러"></p><p><strong>주의</strong> 이때는 embedded가 true로 되어있는 스키마도 config에 넣어주어야 합니다.<br>TodoSchema에 연결되어 있더라도 따로 불러와 주어야 합니다.</p><figure class="highlight typescript"><figcaption><span>src/db/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRealmContext&#125; <span class="keyword">from</span> <span class="string">'@realm/react'</span>;</span><br><span class="line"><span class="keyword">import</span> TodoModel, &#123;AddressSchema&#125; <span class="keyword">from</span> <span class="string">'./Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> SCHEMA_VERSION = <span class="number">2</span>; <span class="comment">// 디비구조가 바뀌면 버전을 바꿔야합니다. </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line">  schema: [TodoModel, AddressSchema], <span class="comment">// AddressSchema 추가</span></span><br><span class="line">  schemaVersion: SCHEMA_VERSION,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> realmContext = createRealmContext(config);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> realmContext;</span><br></pre></td></tr></table></figure><p>스키마에 <code>프로퍼티가 하나라도 바뀔시</code>에는 SCHEMA_VERSION을 바꾸어야합니다. properties의 타입이 추가되거나 바뀌어도 버전을 바꾸어줘야합니다.</p><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Button, SafeAreaView, TextInput, View&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'./src/db'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;useRealm&#125; = realmContext;</span><br><span class="line">  <span class="keyword">const</span> realm = useRealm();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;SafeAreaView&gt;</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;TextInput</span><br><span class="line">          style=&#123;&#123;</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            height: <span class="number">40</span>,</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">          title=<span class="string">"생성"</span></span><br><span class="line">          onPress=&#123;<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(realm.path);</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>SafeAreaView&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>앱 컴포넌트를 작성합니다.</p><h2 id="realm-studio-실행"><a href="#realm-studio-실행" class="headerlink" title="realm studio 실행"></a>realm studio 실행</h2><p>버튼을 누르고 콘솔을 확인해보면 다음과 같은 path가 나옵니다.<br><img src="/image/frontend/ReactNative/react-natvie-realm-react-1.png" alt="path경로"></p><p>터미널을 새로 열고, open 명령어를 이용해서 폴더를 열어줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open /Users/&lt;사용자이름&gt;/Library/Developer/CoreSimulator/Devices/&lt;값&gt;/data/Containers/Data/Application/&lt;값&gt;/Documents/default.realm</span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-2.png" alt="realm studio"></p><h2 id="생성-및-삭제-구현"><a href="#생성-및-삭제-구현" class="headerlink" title="생성 및 삭제 구현"></a>생성 및 삭제 구현</h2><p>useTodo를 생성합니다.<br>realm이 수정되면 자동으로 리렌터링이 되기 때문에 state관리를 따로 하지 않아도 됩니다. state을 수동으로 관리를 하려면 realm을 useRealm이 아닌 직접 realm을 open시켜주어야 합니다.</p><figure class="highlight typescript"><figcaption><span>src/hooks/useTodo.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useCallback&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> realmContext <span class="keyword">from</span> <span class="string">'../db'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;ITodo&#125; <span class="keyword">from</span> <span class="string">'../db/Todo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useTodo = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;useQuery, useRealm&#125; = realmContext;</span><br><span class="line">  <span class="keyword">const</span> todos: Realm.Results&lt;ITodo&gt; = useQuery&lt;ITodo&gt;(<span class="string">'Todo'</span>);</span><br><span class="line">  <span class="keyword">const</span> realm = useRealm();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> createTodo = useCallback(</span><br><span class="line">    (todo: ITodo) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (!todo.text) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        realm.write(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> t: ITodo = realm.create(<span class="string">'Todo'</span>, &#123;</span><br><span class="line">            text: todo.text,</span><br><span class="line">            addresses: todo.addresses,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`created one todo: <span class="subst">$&#123;t.text&#125;</span>`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Fail create'</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    [realm],</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> deleteTodo = useCallback(</span><br><span class="line">    (_id: <span class="built_in">string</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> todo = realm.objectForPrimaryKey&lt;ITodo&gt;(<span class="string">'Todo'</span>, _id);</span><br><span class="line">        <span class="keyword">if</span> (todo) &#123;</span><br><span class="line">          realm.write(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            realm.delete(todo);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Not found id'</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    [realm],</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> &#123;createTodo, deleteTodo, todos&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useTodo;</span><br></pre></td></tr></table></figure><p>그리고 App을 수정해줍니다.</p><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;useState&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Button,</span><br><span class="line">  FlatList,</span><br><span class="line">  SafeAreaView,</span><br><span class="line">  Text,</span><br><span class="line">  TextInput,</span><br><span class="line">  View,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> useTodo <span class="keyword">from</span> <span class="string">'./src/hooks/useTodo'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = useState(<span class="string">''</span>);</span><br><span class="line">  <span class="keyword">const</span> &#123;createTodo, deleteTodo, todos&#125; = useTodo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;SafeAreaView&gt;</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;TextInput</span><br><span class="line">          style=&#123;&#123;</span><br><span class="line">            borderWidth: <span class="number">1</span>,</span><br><span class="line">            height: <span class="number">40</span>,</span><br><span class="line">          &#125;&#125;</span><br><span class="line">          onChangeText=&#123;setText&#125;</span><br><span class="line">          value=&#123;text&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">          title=<span class="string">"생성"</span></span><br><span class="line">          onPress=&#123;<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            createTodo(&#123;</span><br><span class="line">              text,</span><br><span class="line">              addresses: [],</span><br><span class="line">            &#125;);</span><br><span class="line">            setText(<span class="string">''</span>);</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;FlatList</span><br><span class="line">          data=&#123;todos&#125;</span><br><span class="line">          extraData=&#123;todos&#125;</span><br><span class="line">          keyExtractor=&#123;<span class="function"><span class="params">item</span> =&gt;</span> <span class="string">`<span class="subst">$&#123;item._id&#125;</span><span class="subst">$&#123;<span class="built_in">Math</span>.random()&#125;</span>`</span>&#125;</span><br><span class="line">          renderItem=&#123;<span class="function">(<span class="params">&#123;item&#125;</span>) =&gt;</span> (</span><br><span class="line">            &lt;View&gt;</span><br><span class="line">              &lt;Text&gt;&#123;item.text&#125;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">              &lt;Button</span></span><br><span class="line"><span class="regexp">                title="삭제"</span></span><br><span class="line"><span class="regexp">                onPress=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">                  if (item._id) &#123;</span></span><br><span class="line"><span class="regexp">                    deleteTodo(item._id);</span></span><br><span class="line"><span class="regexp">                  &#125;</span></span><br><span class="line"><span class="regexp">                &#125;&#125;</span></span><br><span class="line"><span class="regexp">              /</span>&gt;</span><br><span class="line">            &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">          )&#125;</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>SafeAreaView&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>앱을 실행시켜줍니다.</p><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="/image/frontend/ReactNative/react-natvie-realm-react-3.gif" alt="결과"></p><h2 id="마무리"><a href="#마무리" class="headerlink" title="마무리"></a>마무리</h2><p>react-native 와 realm 그리고 @realm/react를 같이 사용해보았습니다.<br>다른 자세한 내용은 <a href="https://www.mongodb.com/docs/realm/sdk/react-native/install/" rel="external nofollow noopener noreferrer" target="_blank">공식문서</a>에서 찾아보시면 됩니다.</p><p>공식문서의 예시가 적고 구글에서도 React native에서 realm을 사용하는 사례가 많지 않아서 구현하기 번거로움이 많았습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-realm-react/#disqus_thread</comments>
    </item>
    
    <item>
      <title>아두이노 블루투스 모듈 사용법 (arduino hm10 module)</title>
      <link>http://flamingotiger.github.io/etc/arduino/hm10-module/</link>
      <guid>http://flamingotiger.github.io/etc/arduino/hm10-module/</guid>
      <pubDate>Mon, 31 Oct 2022 01:53:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하며&quot;&gt;&lt;a href=&quot;#시작하며&quot; class=&quot;headerlink&quot; title=&quot;시작하며&quot;&gt;&lt;/a&gt;시작하며&lt;/h1&gt;&lt;p&gt;아두이노와 블루투스 모듈 hm10을 연결해서 사용하는 방법을 알아보겠습니다.&lt;br&gt;hm10의 모듈에 관한 자세한
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하며"><a href="#시작하며" class="headerlink" title="시작하며"></a>시작하며</h1><p>아두이노와 블루투스 모듈 hm10을 연결해서 사용하는 방법을 알아보겠습니다.<br>hm10의 모듈에 관한 자세한 정보는 <a href="https://people.ece.cornell.edu/land/courses/ece4760/PIC32/uart/HM10/DSD%20TECH%20HM-10%20datasheet.pdf" rel="external nofollow noopener noreferrer" target="_blank">hm10 데이터시트</a>에서 확인할 수 있습니다.</p><p>전체적으로 많이 사용하는 hc06과 hm10 중에 hc06는 블루투스 버전이 2버전으로 낮기 때문에 제가 사용할 웹 블루투스 api에서는 사용할 수 없기 때문에 블루투스 ble 및 4버전을 지원하는 hm10을 사용하기로 했습니다.</p><p>다른 기술 블로그들이나 테스트하는 영상들을 보면 항상 앱 스토어 및 플레이스토어에서 터미널 앱을 설치해서 사용하는 것을 확인 할 수 있었는데, 이건 실질적으로 앱 혹은 웹 프로젝트를 만드는데 있어서 테스트용도일 뿐이지 의미없는 것이라 생각되었습니다. 그래서 직접 구현해 보도록 하겠습니다.</p><h2 id="회로도"><a href="#회로도" class="headerlink" title="회로도"></a>회로도</h2><p>아두이노 회로도는 <a href="https://www.circuito.io/" rel="external nofollow noopener noreferrer" target="_blank">circuito</a>을 통해서 쉽게 연결해볼수 있습니다.</p><p><img src="/image/etc/arduino/hm10-module-0.png" alt="회로도"></p><p>블루투스 모듈을 보면 VCC, GND, TXD, RXD라고 쓰여있습니다.</p><ul><li>VCC: 전압을 나타냅니다.</li><li>GND: 기준전압 입니다. 전기의 기준점이라고 생각하면 됩니다.</li><li>TXD: 데이터 전송을 위한 포트로 디지털 핀에 연결할 수 있습니다.</li><li>RXD: 데이터 수신을 위한 포트로 디지털 핀에 연결할 수 있습니다.</li></ul><ol><li><p>블루투스 모듈의 VCC와 우노의 5V핀과 연결합니다. 전원공급을 하는 것이라고 생각하시면 됩니다.</p></li><li><p>블루투스 모듈의 GND와 우노의 GND핀과 연결합니다.</p></li><li><p>블루투스 모듈의 TXD와 우노의 디지털2핀과 연결합니다.</p></li><li><p>블루투스 모듈의 RXD와 우노의 디지털3핀과 연결합니다.</p></li></ol><p>우노의 디지털핀은 0번-rx, 1번-tx, 2번-rx, 3번-tx…이런 순서로 전송과 수신이라고 생각하고, 모듈과는 반대로 꽂아주어야 합니다.</p><p><code>RX는 수신 TX는 송신일때, 우노와 모듈이 둘다 TX(송신)로 연결하면 수신이 없고, 둘다 RX(수신)으로 연결하면 전송이 없어서 제대로 작동하지 않습니다.</code></p><h2 id="코드-작성"><a href="#코드-작성" class="headerlink" title="코드 작성"></a>코드 작성</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 블루투스 모듈 포트 설정 (HM10)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BT_RXD 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BT_TXD 3</span></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BTSerial</span><span class="params">(BT_RXD, BT_TXD)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);  <span class="comment">// PC에서 모니터링하기 위한 시리얼 통신 시작</span></span><br><span class="line">  BTSerial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(<span class="string">"Bluetooth initial"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="keyword">if</span> (Serial.available()) &#123;</span><br><span class="line">    c = Serial.read();</span><br><span class="line">    BTSerial.print(c);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (BTSerial.available()) &#123;</span><br><span class="line">    c = BTSerial.read();</span><br><span class="line">    Serial.print(c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>공식홈페이지에서 <a href="https://docs.arduino.cc/learn/built-in-libraries/software-serial" rel="external nofollow noopener noreferrer" target="_blank">software-serial</a>의 함수들을 확인 할수 있습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial.begin(<span class="number">9600</span>);  <span class="comment">// PC에서 모니터링하기 위한 시리얼 통신 시작</span></span><br><span class="line">BTSerial.begin(<span class="number">9600</span>);</span><br></pre></td></tr></table></figure><p>블루투스 통신과 우노의 시리얼 통신 속도를 맞추어 주어야합니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SoftwareSerial <span class="title">mySerial</span><span class="params">(rxPin, txPin)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="HM10-모듈의-UUID"><a href="#HM10-모듈의-UUID" class="headerlink" title="HM10 모듈의 UUID"></a>HM10 모듈의 UUID</h2><p>블루투스의 ble 통신의 경우 service &gt; characteristic의 구조가 있습니다. 자세한 설명은 다른 블로그 포스트에서 설명하겠습니다.<br>hm10 모듈에서는 블루투스 페어링이후 쓰기 및 읽기에 대한 특성을 제공합니다.<br>블루투스 모듈의 이름을 알거나 수정하기 위해서는 AT command를 이용하면 수정 가능합니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> uuids = &#123;</span><br><span class="line">      serviceUUID = <span class="string">"0000ffe0-0000-1000-8000-00805f9b34fb"</span>, <span class="comment">// service uuid</span></span><br><span class="line">      readUUID = <span class="string">"0000ffe1-0000-1000-8000-00805f9b34fb"</span>, <span class="comment">// characteristic uuid</span></span><br><span class="line">      writeUUID = <span class="string">"0000ffe1-0000-1000-8000-00805f9b34fb"</span> <span class="comment">// characteristic uuid</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AT-통신-옵션"><a href="#AT-통신-옵션" class="headerlink" title="AT 통신(옵션)"></a>AT 통신(옵션)</h2><p><em>맨 처음 HM10관련 데이터 시트에서도 나와있는 내용입니다</em><br>기본 값으로는 블루투스 페어링이 되어있지 않은 상태에서 AT 명령어를 사용할 수 있습니다.<br>다른 외부 기기와 페어링이 된 상태에서 AT명령어를 사용하기 위해서는 mode를 변경해주어야 합니다.</p><p>AT명령어가 되는지 우선 확인을 해보아야합니다.<br><img src="/image/etc/arduino/hm10-module-1.png" alt="AT command"><br>AT를 입력했을때 OK라는 글자가 나와야합니다.</p><h4 id="OK가-안나올때-체크요소"><a href="#OK가-안나올때-체크요소" class="headerlink" title="OK가 안나올때 체크요소"></a>OK가 안나올때 체크요소</h4><ul><li>블루투스 모듈 값을 Serial로 print해주는 코드가 있는지 확인(아래와 같은 코드)</li><li>선이 제대로 연결이 되어있는지 확인.</li><li>다른 라이브러리와 같이 사용하고 있는지 검토 (다른 라이브러리 예를들어, es522랑 사용할때 print가 안되는 이슈가 있었음)</li><li>다른 hm10모듈을 사용해본다.</li><li>블루투스 모듈 관련 코드만 남겨서 테스트를 해본다.</li></ul><p>OK글자가 나오는 원리는 다음과 같습니다.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"> <span class="keyword">if</span> (Serial.available()) &#123;</span><br><span class="line">   c = Serial.read();</span><br><span class="line">   BTSerial.print(c);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> (BTSerial.available()) &#123;</span><br><span class="line">   c = BTSerial.read();</span><br><span class="line">   Serial.print(c);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ol><li>블루투스 모듈의 AT를 터미널창에 입력</li><li><code>Serial.available</code>에서 인식</li><li>시리얼에서 인식한 값을 <code>BTSerial.print(c)</code>을 통해서 블루투스 모듈로 입력</li><li>블루투스 모듈에서 인식한 값을 <code>BTSerial.available</code> 에서 인식</li><li>인식된 값을 시리얼로 출력을 해줍니다.</li></ol><p>영문은 전부 대문자여야 합니다.<br>대부분 현재 상태정보를 확인하기 위해서는 명령어 끝에 ?를 넣습니다.</p><h3 id="이름짓기"><a href="#이름짓기" class="headerlink" title="이름짓기"></a>이름짓기</h3><ul><li>AT+NAME? : 기기 이름이 무엇인지</li><li>AT+NAME<code>HM10</code> : 기기이름을 <code>HM10</code>으로 짓기</li></ul><p><img src="/image/etc/arduino/hm10-module-2.png" alt="이름변경"><br><img src="/image/etc/arduino/hm10-module-3.png" alt="이름변경결과"><br><img src="/image/etc/arduino/hm10-module-4.png" alt="이름확인"><br><img src="/image/etc/arduino/hm10-module-5.png" alt="이름확인결과"></p><h3 id="모드-변경"><a href="#모드-변경" class="headerlink" title="모드 변경"></a>모드 변경</h3><ul><li>AT+MODE? : 기기모드 확인</li><li>AT+MODE<code>1</code> : 기기모드를 <code>1</code>로 변경</li></ul>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/arduino/hm10-module/#disqus_thread</comments>
    </item>
    
    <item>
      <title>RFID 하이퍼 터미널 테스트(mac OS)</title>
      <link>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/</link>
      <guid>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/</guid>
      <pubDate>Fri, 10 Jun 2022 08:08:30 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;RFID-구매&quot;&gt;&lt;a href=&quot;#RFID-구매&quot; class=&quot;headerlink&quot; title=&quot;RFID 구매&quot;&gt;&lt;/a&gt;RFID 구매&lt;/h1&gt;&lt;p&gt;맥에서 RFID를 테스트 해보기 위해서 RFID 리더기를 구매하였다. 그런데 USB를 연결
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="RFID-구매"><a href="#RFID-구매" class="headerlink" title="RFID 구매"></a>RFID 구매</h1><p>맥에서 RFID를 테스트 해보기 위해서 RFID 리더기를 구매하였다. 그런데 USB를 연결하고 터치를 해도 값이 나오지 않았다. 연결이 제대로 되었는지 확인하기 위해서 하이퍼 터미널로 테스트를 해보려고 한다.</p><h2 id="하이퍼-터미널"><a href="#하이퍼-터미널" class="headerlink" title="하이퍼 터미널"></a>하이퍼 터미널</h2><p>윈도우에서는 하이퍼 터미널이 따로 있지만 맥에서는 따로 존재하지 않고 터미널을 통해서 사용할 수 있다.<br>터미널 프로그램에서 <code>screen</code>을 사용하면 시리얼 터미널 프로그램으로 사용할 수 있다.<br>사용하는 방법은 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen [연결된 USB 디바이스 이름] [통신속도]</span><br></pre></td></tr></table></figure><p>통신속도: 110, 300, 120, 2400, 4800, 9600, 1440, 19200, 28800, 38400, 57600, 115200를 예시로 들 수 있다.</p><h2 id="테스트-시작"><a href="#테스트-시작" class="headerlink" title="테스트 시작"></a>테스트 시작</h2><p>터미널을 열고 /dev 디렉터리로 진입한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /dev</span><br></pre></td></tr></table></figure><p>/dev파일에 드라이버가 설치되거나 자동으로 인식된다.</p><p>/dev 디렉토리에서 연결된 usb를 찾아야합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>이름은 주로 <code>tty.usbserial-*</code>형식이거나 <code>*.usbserial.*</code>형식으로 되어있습니다.<br><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-0.png" alt="리스트"></p><p>파일 명을 찾았으면 다음과 같이 터미널에 입력합니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-1.png" alt="실행 명령어"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen /dev/tty.usbserial-0001 9600</span><br></pre></td></tr></table></figure><p>그러면 빈 터미널이 나오는데 실행이 완료된 것 입니다.<br>이후 rfid 카드를 리더기에 인식해보면 값이 나오는 것을 확인할 수 있습니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-2.png" alt="테스트"></p><h2 id="screen-명령어-오류시"><a href="#screen-명령어-오류시" class="headerlink" title="screen 명령어 오류시"></a>screen 명령어 오류시</h2><p>screen /dev/tty.usbserial-0001 9600  이렇게 명령어를 입력했는데 다음과 같은 오류가 난 경우는 이미 하이퍼 터미널이 실행되어있다는 것입니다.<br><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-3.png" alt="오류"><br>현재 실행되어있는 screen이 있는지 확인하기 위해서 다음과 같이 명령어를 입력해 줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -ls</span><br></pre></td></tr></table></figure><p>그러면 다음같이 <code>There is a screen on:~</code> 이렇게 텍스트가 나오는데 현재 실행되어있는 screen을 보여주고 있는 것입니다.<br>켜져있는 터미널을 실행하기 위해 바로 아래에 <code>*.ttys000.*</code>를 복사합니다.<br>그리고 다음 명령어를 입력합니다.</p><p><img src="/image/etc/rfid/rfid-hyper-terminal-test-mac-os-4.png" alt="실행"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r [복사한 스크린]</span><br></pre></td></tr></table></figure><p>그러면 정상적으로 실행되는 것을 확인할 수 있습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/rfid/rfid-hyper-terminal-test-mac-os/#disqus_thread</comments>
    </item>
    
    <item>
      <title>M1칩 mac에서 React native android 실행시 &#39;Caused by java.io.IOException Cannot run program &quot;node&quot;&#39;에러</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/</guid>
      <pubDate>Fri, 04 Feb 2022 02:44:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React native 공식홈페이지에서 나와 있는데로 프로그램 셋팅을 하고, 프로젝트를 안드로이드 스튜디오로 켰
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React native 공식홈페이지에서 나와 있는데로 프로그램 셋팅을 하고, 프로젝트를 안드로이드 스튜디오로 켰을때 <code>Caused by: java.io.IOException: Cannot run program &quot;node&quot;</code>에러가 나왔습니다. 이때 해결방법을 찾아보았습니다.</p><p>이 문제가 m1칩이 탑재된 맥에서 나오는 것으로 알고 있습니다.<br>해결방법은 간단합니다.</p><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><p>환경구성을 안했다면 먼저 <a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-setup/">React native 초기 설치하기</a>포스트에서 안드로이드 환경변수 설정을 먼저 해주도록 합니다.</p><p>환경변수 설정을 해도 에러가 나온다면, 다음 솔루션을 진행합니다.<br>터미널을 켜서 다음 명령어를 실행해줍니다. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +x /Applications/Android\ Studio.app/Contents/bin/printenv</span><br></pre></td></tr></table></figure><p>이후 안드로이드 스튜디오를 종료하고 다시 프로젝트를 열면 정상적으로 작동하는 것을 확인할 수 있습니다.</p><h2 id="참고사이트"><a href="#참고사이트" class="headerlink" title="참고사이트"></a>참고사이트</h2><p><a href="https://github.com/react-native-community/cli/issues/1457" rel="external nofollow noopener noreferrer" target="_blank">Gradle sync stop working with “Cannot run program “node” message #1457 깃헙참고 사이트</a></p><p><a href="https://stackoverflow.com/questions/61922174/react-native-on-android-cannot-run-program-node-error-2-no-such-file-or-dir/70891538#70891538" rel="external nofollow noopener noreferrer" target="_blank">stackoverflow</a></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-android-cannot-run-program-node/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pod install시 [IMPORTANT] Don&#39;t forget to include the Crash Report log file under DiagnosticReports directory in bug reports 에러 발생시</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/</guid>
      <pubDate>Wed, 26 Jan 2022 03:47:52 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React Native 프로젝트에서 패키지를 추가 하고 나서 pod install 명령어를 입력해서 패키지를 설
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React Native 프로젝트에서 패키지를 추가 하고 나서 pod install 명령어를 입력해서 패키지를 설치하려고 했는데,<br>다음과 같은 에러가 나왔다.<br><code>[IMPORTANT] Don&#39;t forget to include the Crash Report log file under DiagnosticReports directory in bug reports.</code><br>해결책은 간단합니다.(m1 맥미니, Monterey, node v14.17.0버전에서 테스트를 했습니다.)<br><img src="/image/frontend/ReactNative/react-native-pod-install-error-0.png" alt="에러"></p><h2 id="솔루션"><a href="#솔루션" class="headerlink" title="솔루션"></a>솔루션</h2><p><a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/">React native 초기 설정하기</a>에서 포스팅한것처럼 rosetta 터미널에서 pod install 명령입력해주면 정상적으로 설치되는 것을 확인 할 수 있습니다.</p><h3 id="느낀점"><a href="#느낀점" class="headerlink" title="느낀점"></a>느낀점</h3><p>React native에서 패키지를 설치하거나 환경설정을 해야할때 터미널을 이용한다면 rosetta를 이용하는 편이 마음이 편하다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-pod-install-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native Permissions 사용하여 권한 확인하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/</guid>
      <pubDate>Fri, 14 Jan 2022 08:42:21 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;React native permissions 라이브러리를 통해서 이 기기에서 권한이 허용되었는지 여부를 체크할 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>React native permissions 라이브러리를 통해서 이 기기에서 권한이 허용되었는지 여부를 체크할 수 있습니다.<br>안드로이드에서는 React native에 내장된 <a href="https://reactnative.dev/docs/permissionsandroid" rel="external nofollow noopener noreferrer" target="_blank">PermissionsAndroid</a> 를 사용하는 방법도 있습니다.<br>IOS는 React native 공식문서에 따로 기재되어있지 않아서 공통적으로 권한 관리를 하기 위해서 react native permissions을 사용하도록 하겠습니다.</p><h2 id="설치-및-환경설정"><a href="#설치-및-환경설정" class="headerlink" title="설치 및 환경설정"></a>설치 및 환경설정</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i react-native-permissions</span><br></pre></td></tr></table></figure><p>react-native-permissions 패키지를 설치해줍니다.<br>이후에 Podfile을 수정해줍니다.</p><figure class="highlight ruby"><figcaption><span>Podfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">target <span class="string">'YourAwesomeProject'</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># …</span></span><br><span class="line">  permissions_path = <span class="string">'../node_modules/react-native-permissions/ios'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨</span></span><br><span class="line">  pod <span class="string">'Permission-AppTrackingTransparency'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/AppTrackingTransparency"</span></span><br><span class="line">  pod <span class="string">'Permission-BluetoothPeripheral'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/BluetoothPeripheral"</span></span><br><span class="line">  pod <span class="string">'Permission-Calendars'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Calendars"</span></span><br><span class="line">  pod <span class="string">'Permission-Camera'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Camera"</span></span><br><span class="line">  pod <span class="string">'Permission-Contacts'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Contacts"</span></span><br><span class="line">  pod <span class="string">'Permission-FaceID'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/FaceID"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationAccuracy'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationAccuracy"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationAlways'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationAlways"</span></span><br><span class="line">  pod <span class="string">'Permission-LocationWhenInUse'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/LocationWhenInUse"</span></span><br><span class="line">  pod <span class="string">'Permission-MediaLibrary'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/MediaLibrary"</span></span><br><span class="line">  pod <span class="string">'Permission-Microphone'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Microphone"</span></span><br><span class="line">  pod <span class="string">'Permission-Motion'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Motion"</span></span><br><span class="line">  pod <span class="string">'Permission-Notifications'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Notifications"</span></span><br><span class="line">  pod <span class="string">'Permission-PhotoLibrary'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/PhotoLibrary"</span></span><br><span class="line">  pod <span class="string">'Permission-PhotoLibraryAddOnly'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/PhotoLibraryAddOnly"</span></span><br><span class="line">  pod <span class="string">'Permission-Reminders'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Reminders"</span></span><br><span class="line">  pod <span class="string">'Permission-Siri'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/Siri"</span></span><br><span class="line">  pod <span class="string">'Permission-SpeechRecognition'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/SpeechRecognition"</span></span><br><span class="line">  pod <span class="string">'Permission-StoreKit'</span>, <span class="symbol">:path</span> =&gt; <span class="string">"<span class="subst">#&#123;permissions_path&#125;</span>/StoreKit"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><figcaption><span>Info.plist</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAppleMusicUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSBluetoothAlwaysUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSBluetoothPeripheralUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCalendarsUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCameraUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSContactsUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSFaceIDUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationAlwaysAndWhenInUseUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationAlwaysUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationTemporaryUsageDescriptionDictionary<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>YOUR-PURPOSE-KEY<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSLocationWhenInUseUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSMicrophoneUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSMotionUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryAddUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSRemindersUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSSpeechRecognitionUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSSiriUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSUserTrackingUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">string</span>&gt;</span>YOUR TEXT<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- … --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><figure class="highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">package</span>=<span class="string">"com.myawesomeapp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 🚨 앱에서 사용하는 허용 권한만 추가해줍니다. 🚨 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCEPT_HANDOVER"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_BACKGROUND_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_MEDIA_LOCATION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACTIVITY_RECOGNITION"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ANSWER_PHONE_CALLS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADVERTISE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_CONNECT"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_SCAN"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BODY_SENSORS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CALL_PHONE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_ACCOUNTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.PROCESS_OUTGOING_CALLS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALENDAR"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CALL_LOG"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CONTACTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_NUMBERS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_MMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_WAP_PUSH"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECORD_AUDIO"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.SEND_SMS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.USE_SIP"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALENDAR"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CALL_LOG"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.android.voicemail.permission.ADD_VOICEMAIL"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- … --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="사용하기"><a href="#사용하기" class="headerlink" title="사용하기"></a>사용하기</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Platform &#125; <span class="keyword">from</span> <span class="string">"react-native"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; PERMISSIONS, RESULTS, request &#125; <span class="keyword">from</span> <span class="string">"react-native-permissions"</span>;</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> permissionCheck = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.OS !== <span class="string">"ios"</span> &amp;&amp; Platform.OS !== <span class="string">"android"</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> platformPermissions =</span><br><span class="line">      Platform.OS === <span class="string">"ios"</span></span><br><span class="line">        ? PERMISSIONS.IOS.CAMERA</span><br><span class="line">        : PERMISSIONS.ANDROID.CAMERA;</span><br><span class="line">    <span class="keyword">const</span> requestCameraPermission = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> request(platformPermissions);</span><br><span class="line">        result === RESULTS.GRANTED</span><br><span class="line">          ? setOpenScanner(<span class="literal">true</span>)</span><br><span class="line">          : Alert.alert(<span class="string">"카메라 권한을 허용해주세요"</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        Alert.alert(<span class="string">"Camera permission err"</span>);</span><br><span class="line">        <span class="built_in">console</span>.warn(err);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    requestCameraPermission();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;, []);</span><br></pre></td></tr></table></figure><h2 id="번외"><a href="#번외" class="headerlink" title="번외"></a>번외</h2><p>Android react native PermissionsAndroid 사용해보는 방법도 알아보겠습니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Platform,</span><br><span class="line">  PermissionsAndroid,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.OS === <span class="string">'android'</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> requestCameraPermission = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> granted = <span class="keyword">await</span> PermissionsAndroid.request(</span><br><span class="line">            PermissionsAndroid.PERMISSIONS.CAMERA,</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">'Camera Permission'</span>,</span><br><span class="line">              message: <span class="string">'App needs permission for camera access'</span>,</span><br><span class="line">              buttonPositive: <span class="string">'OK'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          );</span><br><span class="line">          <span class="keyword">if</span>(granted === PermissionsAndroid.RESULTS.GRANTED)&#123;</span><br><span class="line">Alert.alert(‘success’);</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">Alert.alert(‘Please camera permission’);</span><br><span class="line">   &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          Alert.alert(<span class="string">'Camera permission err'</span>);</span><br><span class="line">          <span class="built_in">console</span>.warn(err);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      requestCameraPermission();</span><br><span class="line">&#125;</span><br><span class="line">&#125;,[]);</span><br></pre></td></tr></table></figure><h2 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h2><p>시뮬레이터에서 테스트를 해보겠습니다.</p><p>설정에서 허용안함을 해보겠습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-0.png" alt="카메라 허용안함"></p><p>카메라 작동이 안되는 것을 확인할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-1.png" alt="카메라 작동 오류"></p><p>다시 카메라를 허용하면,<br><img src="/image/frontend/ReactNative/react-native-permissions-2.png" alt="카메라 허용"></p><p>카메라가 다시 작동하는 것을 확인할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-permissions-3.png" alt="카메라 작동"></p><h2 id="에러시"><a href="#에러시" class="headerlink" title="에러시"></a>에러시</h2><p>No permission handler detected 에러가 나온다면 Xcode -&gt; Product -&gt; Clean Build Folder 작업을 한번 해주세요</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-permissions/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native QRcode scanner 사용하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/</guid>
      <pubDate>Thu, 13 Jan 2022 06:57:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;react-native 앱에서 QR코드를 스캔할 수 있는 스캐너를 라이브러리를 이용하여 구현해보도록 하겠습니다.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>react-native 앱에서 QR코드를 스캔할 수 있는 스캐너를 라이브러리를 이용하여 구현해보도록 하겠습니다.<br>사용한 버전은 다음과 같습니다.</p><p>Xcode: 12.5</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"react"</span>: <span class="string">"17.0.2"</span>,</span><br><span class="line">  <span class="attr">"react-native"</span>: <span class="string">"0.66.4"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="라이브러리-정하기"><a href="#라이브러리-정하기" class="headerlink" title="라이브러리 정하기"></a>라이브러리 정하기</h2><p>수많은 라이브러리 중 결론부터 말하자면 react-native-camera-kit라이브러리를 사용할 것입니다.<br>이 라이브러리를 정한 이유는 아래에 나와있습니다.</p><p>QR코드 스캐너 라이브러리</p><ul><li>react-native-qrcode-scanner ❌ (react-native-camera)<br>카메라 라이브러리필요</li></ul><p>QR코드를 스캔하기 위해서 우선 스마트폰의 카메라 설치해야합니다.</p><p>카메라 라이브러리로는</p><ul><li>react-native-camera ❌</li><li>react-native-vision-camera ❌</li><li>react-native-camera-kit ✅<br>이렇게 세가지가 많이 사용되는 것으로 보입니다.</li></ul><p>현시점에서 react-native-camera는 deprecated가 되어 더이상 업데이트가 없어서 사용하지 않습니다.<br>그러므로 react-native-camera와 react-native-recode-scanner는 사용할 수 없습니다.</p><p>react-native-camera 깃헙에서 react-native-vision-camera 라이브러리가 더 기능이 추가되고 성능이 향상되었다고 설명하며 링크가 연결되어 있습니다.<br>다만, 지금은 react-native 처음 초기 설정이후 라이브러리 설치후 빌드에서 에러가 나오는 현상이 유지되고 있기 때문에 사용하기는 어렵다고 판단이 됩니다.<br>(관련링크 <a href="https://github.com/mrousavy/react-native-vision-camera/issues/716" rel="external nofollow noopener noreferrer" target="_blank">이슈</a>)<br>그래서 사용하기도 간편하고 쉬운 <code>react-native-camera-kit</code>라이브러리를 사용할 예정입니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p><a href="https://github.com/teslamotors/react-native-camera-kit" rel="external nofollow noopener noreferrer" target="_blank">react-native-camera-kit 깃헙 링크</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install react-native-camera-kit --save &amp;&amp; cd ios &amp;&amp; pod install &amp;&amp; cd ..</span><br></pre></td></tr></table></figure><p>위에 명령어를 사용해서 라이브러리를 설치하고 ios파일에서 pod패키지를 설치하고 다시 루트로 돌아옵니다.</p><h2 id="카메라-권한-허용해주기"><a href="#카메라-권한-허용해주기" class="headerlink" title="카메라 권한 허용해주기"></a>카메라 권한 허용해주기</h2><p>카메라를 이용하기 위해서는 권한을 허용해주어야 사용할 수 있습니다.</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>루트 경로에서 android/src/main/AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CAMERA"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><p>루트 경로에서 ios/PROJECT_NAME/Info.list<br>다음 값을 추가해줍니다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>NSCameraUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>For taking photos<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>NSPhotoLibraryUsageDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>For saving photos<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="사용하기"><a href="#사용하기" class="headerlink" title="사용하기"></a>사용하기</h3><p>스캐너 컴포넌트를 생성합니다.</p><figure class="highlight typescript"><figcaption><span>QRCodeScanner.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useEffect, useRef, useState &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  Alert,</span><br><span class="line">  Button,</span><br><span class="line">  Dimensions,</span><br><span class="line">  StyleSheet,</span><br><span class="line">  Vibration,</span><br><span class="line">  View,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"react-native"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Camera, CameraType &#125; <span class="keyword">from</span> <span class="string">"react-native-camera-kit"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> QRCodeScanner = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [scaned, setScaned] = useState&lt;<span class="built_in">boolean</span>&gt;(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> ref = useRef(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 종료후 재시작을 했을때 초기화</span></span><br><span class="line">    setScaned(<span class="literal">true</span>);</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> onBarCodeRead = <span class="function">(<span class="params">event: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!scaned) <span class="keyword">return</span>;</span><br><span class="line">    setScaned(<span class="literal">false</span>);</span><br><span class="line">    Vibration.vibrate();</span><br><span class="line">    Alert.alert(<span class="string">"QR Code"</span>, event.nativeEvent.codeStringValue, [</span><br><span class="line">      &#123; text: <span class="string">"OK"</span>, onPress: <span class="function"><span class="params">()</span> =&gt;</span> setScaned(<span class="literal">true</span>) &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">      &lt;Camera</span><br><span class="line">        style=&#123;styles.scanner&#125;</span><br><span class="line">        ref=&#123;ref&#125;</span><br><span class="line">        cameraType=&#123;CameraType.Back&#125; <span class="comment">// Front/Back(default)</span></span><br><span class="line">        zoomMode</span><br><span class="line">        focusMode</span><br><span class="line">        <span class="comment">// Barcode Scanner Props</span></span><br><span class="line">        scanBarcode</span><br><span class="line">        showFrame=&#123;<span class="literal">false</span>&#125;</span><br><span class="line">        laserColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        frameColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        surfaceColor=<span class="string">"rgba(0, 0, 0, 0)"</span></span><br><span class="line">        onReadCode=&#123;onBarCodeRead&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const styles = StyleSheet.create(&#123;</span></span><br><span class="line"><span class="regexp">  container: &#123;</span></span><br><span class="line"><span class="regexp">    flex: 1,</span></span><br><span class="line"><span class="regexp">    width: Dimensions.get("window").width,</span></span><br><span class="line"><span class="regexp">    height: Dimensions.get("window").height,</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  scanner: &#123; flex: 1 &#125;,</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br><span class="line"><span class="regexp">export default QRCodeScanner;</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><figcaption><span>App.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;View&gt;</span><br><span class="line">      &lt;QRCodeScanner /&gt;</span><br><span class="line">    &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure><p><img src="/image/frontend/ReactNative/react-native-qrcode-scanner-0.gif" alt="실행화면"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-qrcode-scanner/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iOS 빌드시 xcode doesn&#39;t support project&#39;s IOS 에러 해결하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/</guid>
      <pubDate>Thu, 13 Jan 2022 06:02:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;아이폰에서 시뮬레이션하기 위해서 빌드하기 버튼을 클릭했는데, &lt;code&gt;xcode doesn&amp;#39;t supp
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>아이폰에서 시뮬레이션하기 위해서 빌드하기 버튼을 클릭했는데, <code>xcode doesn&#39;t support project&#39;s IOS 15.1(19B74)</code>라는 에러가 발생했습니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-0.png" alt="오류 메세지"></p><p>이것은 xcode가 아이폰의 소프트웨어 버전인 15.1을 호환하지 않는다는 이야기 입니다.<br>그렇다면 xcode를 설치해야겠죠?<br>아이폰의 최신버전 15.0 이상에서 빌드를 하기 위해서는 Xcode 13 버전이 필요합니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-3.png" alt="version"><br><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-4.png" alt="version"></p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-1.png" alt="app store"></p><p>xcode를 업데이트 하려면 mac버전도 업데이트 해야합니다. (현재 Big Sur)<br>Mac bigsur버전이라면 xcode13버전을 설치할 수 없기 때문에 mac을 monterey버전으로 업데이트 해주어야 합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-version-error-2.png" alt="mac version update"></p><p>xcode13버전은 Appstore에서 설치 및 업데이트 할 수 있습니다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><ol><li>Mac이 monterey버전으로 업데이트 해야한다.</li><li>xcode가 13버전 이상으로 업데이트 되어야한다.</li></ol><p>현재 아이폰의 버전이 14버전이면 xcode를 13버전으로 업데이트 하지 않아도 에러가 나오지 않습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React native 아이폰에 빌드해서 테스트하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/</guid>
      <pubDate>Thu, 13 Jan 2022 05:51:16 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;환경설정&quot;&gt;&lt;a href=&quot;#환경설정&quot; class=&quot;headerlink&quot; title=&quot;환경설정&quot;&gt;&lt;/a&gt;환경설정&lt;/h1&gt;&lt;p&gt;시뮬레이터가 아니라 카메라나 실제로 아이폰에 옮겨서 테스트를 해보기 위한 방법입니다.&lt;/p&gt;
&lt;h2 id=&quot;애플
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h1><p>시뮬레이터가 아니라 카메라나 실제로 아이폰에 옮겨서 테스트를 해보기 위한 방법입니다.</p><h2 id="애플-계정등록"><a href="#애플-계정등록" class="headerlink" title="애플 계정등록"></a>애플 계정등록</h2><p>이전에는 애플 개발자 계정으로만 가능했었는데, 현재는 일반 애플 사용자 계정으로 로그인을 해서 빌드 할 수 있게 되었습니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-0.png" alt="preferences"></p><p><img src="/image/frontend/ReactNative/react-native-ios-build-1.png" alt="accounts 탭"></p><p>accounts에 들어가서 애플 계정을 추가해줍니다.</p><p>이후 프로젝트가 열려있는 Xcode에 들어가서 targets &gt; 내프로그램명 &gt; Signing &amp; Capabilities 탭을 선택합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-2.png" alt="Signing &amp; Capabilities 탭"></p><p>그리고 signing부분의 team에서 아까 추가한 애플계정을 선택합니다.</p><p><img src="/image/frontend/ReactNative/react-native-ios-build-3.png" alt="team"></p><h1 id="빌드하기"><a href="#빌드하기" class="headerlink" title="빌드하기"></a>빌드하기</h1><p>아이폰이 맥에 연결된 상태에서 시뮬레이터로 설정된것을 내 아이폰으로 설정하고 왼쪽 상단에 플레이 버튼을 누릅니다.<br>에러가 나지 않는다면 정상적으로 아이폰에 설치됩니다.</p><p>xcode doesn’t support 에러가 나오면서 빌드가 안되면,<a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build-version-error/">xcode doesn’t support 에러시 해결</a>을 참고 해주세요.</p><p>아이폰에서 신뢰할 수 없는 개발자라는 팝업이 나오면, 다음 경로에서 신뢰 버튼을 클릭해주어야 합니다.</p><p><code>설정 &gt; 일반 &gt; VPN 및 기기관리 &gt; 개발자이메일 &gt; 해당하는 프로젝트 &gt; 신뢰</code><br><img src="/image/frontend/ReactNative/react-native-ios-build-4.png" alt="vpn 및 기기 관리"></p><p>이후 앱을 실행하면 잘 작동하게 됩니다.<br><img src="/image/frontend/ReactNative/react-native-ios-build-5.png" alt="어플 작동 화면"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-ios-build/#disqus_thread</comments>
    </item>
    
    <item>
      <title>mac m1에서 react native 빌드 에러 The linked library &#39;libPods-ProjectName.a&#39; is missing one or morearchitectures required by this target x86_64</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/</guid>
      <pubDate>Tue, 14 Dec 2021 05:42:58 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;mac m1에서 프로젝트를 생성한 이후 ios에서 빌드를 했을 때 &lt;code&gt;Apple Silicon M1 - 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>mac m1에서 프로젝트를 생성한 이후 ios에서 빌드를 했을 때 <code>Apple Silicon M1 - The linked library &#39;libPods-ProjectName.a&#39; is missing one or more architectures required by this target: x86_64</code>와 같은 에러가 나와서 빌드가 안되는 경우가 있습니다.<br>해결방법은 정말 간단합니다.</p><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>xcode를 연이후에 프로젝트에서 build setting을 선택합니다.<br>이후 <code>Excluded architactures</code>에서 debug release에 <code>arm64</code>를 추가해줍니다. 추가하는 방법은 다음과 같습니다.</p><p><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-0.png" alt="step1"><br><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-1.png" alt="step2"><br><img src="/image/frontend/ReactNative/react-native-m1-first-build-error-2.png" alt="step3"></p><p>이후 빌드를 해보면 잘 작동하는 것을 확인할 수 있습니다.</p><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><p><a href="https://stackoverflow.com/questions/65364886/react-native-on-apple-silicon-m1-the-linked-library-libpods-projectname-a-is" rel="external nofollow noopener noreferrer" target="_blank">스택오버플로우</a></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-m1-first-build-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>M1 mac에서 React native 초기 설치시 에러 해결하기</title>
      <link>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/</link>
      <guid>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/</guid>
      <pubDate>Fri, 10 Dec 2021 07:39:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;리액트 네이티브 초기 설정하는 방법은 다음 링크에서 확인할 수 있습니다.&lt;br&gt;&lt;a href=&quot;https://f
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>리액트 네이티브 초기 설정하는 방법은 다음 링크에서 확인할 수 있습니다.<br><a href="https://flamingotiger.github.io/frontend/ReactNative/react-native-setup/">초기 설정</a><br>초기 설정 방법 대로 했는데 ios에서 에러가 날 경우 해결 방법입니다.</p><p>m1 맥미니, Big sur, node v14.17.0버전에서 테스트를 했습니다.</p><h2 id="ios-에러"><a href="#ios-에러" class="headerlink" title="ios 에러"></a>ios 에러</h2><p>처음에 설치를 하고 <code>npx react-native init MyApp --template react-native-template-typescript</code>명령어를 실행했는데 ios부분에서 에러가 난다면 몇가지 시도를 해볼 수 있습니다.</p><h3 id="rosetta"><a href="#rosetta" class="headerlink" title="rosetta"></a>rosetta</h3><p>로제타를 자주 사용할 것이기 때문에 로제타 터미널을 복제해서 생성합니다.<br><img src="/image/frontend/ReactNative/react-native-install-error-0.png" alt="유틸리티"><br><img src="/image/frontend/ReactNative/react-native-install-error-1.png" alt="정보보기"><br><img src="/image/frontend/ReactNative/react-native-install-error-2.png" alt="설정"></p><h3 id="cocoapods-설치"><a href="#cocoapods-설치" class="headerlink" title="cocoapods 설치"></a>cocoapods 설치</h3><p>코코아팟은 npm과 같이 의존성 관리하는 패키지 입니다.<br>FFI는 Foreign Function Interface의 줄임말로, Ruby-FFI는 다른 언어의 동적 링크 네이티브 라이브러리를 읽어와서 루비 코드로 실행할 수 있게 해주는 라이브러리입니다. 이 라이브러리를 설치하면 빅서 혹은 m1에서 나오는 에러가 해결되는 경우도 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapods</span><br><span class="line">sudo gem install ffi</span><br></pre></td></tr></table></figure><h3 id="기존-레거시-삭제"><a href="#기존-레거시-삭제" class="headerlink" title="기존 레거시 삭제"></a>기존 레거시 삭제</h3><p>기존 레거시는 삭제 시키고 다시 설치<br>레거시 react-native-cli에서는 해당 템플릿을 사용할 수 없고 새로운 CLI에서만 사용할 수 있다고 한다.<br>기존의 cli를 제거하고 npx를 이용하거나 npx를 이용하고 싶지 않다면 새로운 cli를 전역으로 설치해야 한다. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g react-native-cli</span><br><span class="line">npm i -g @react-native-community/cli</span><br><span class="line">npx react-native init MyApp --template react-native-template-typescript</span><br></pre></td></tr></table></figure><p>이후에 실행시켜봅니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run ios</span><br></pre></td></tr></table></figure><h3 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h3><p>설치와 실행이 잘 되는 것을 확인 할 수 있습니다.<br><img src="/image/frontend/ReactNative/react-native-install-error-3.png" alt="결과"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/ReactNative/react-native-install-error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>사용중인 포트 프로세스 찾아서 종료시키기</title>
      <link>http://flamingotiger.github.io/etc/etc/kill-port/</link>
      <guid>http://flamingotiger.github.io/etc/etc/kill-port/</guid>
      <pubDate>Mon, 29 Nov 2021 03:51:31 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h1&gt;&lt;p&gt;프로젝트에서 서버를 &lt;code&gt;npm run dev&lt;/code&gt; &lt;code&gt;npm run start&lt;/code&gt;를 통해서 실행
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h1><p>프로젝트에서 서버를 <code>npm run dev</code> <code>npm run start</code>를 통해서 실행했을때, 사용하지 않아도 실행되어있는 경우가 있다.<br>일반적으로 8080과 3000을 많이 사용하는데, 실행이 안된다면, 포트 프로세스를 종료시키는 방법을 사용하면 된다.</p><h1 id="해결책"><a href="#해결책" class="headerlink" title="해결책"></a>해결책</h1><p>8080포트가 접속중인지 확인해 본다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i tcp:8080</span><br></pre></td></tr></table></figure><p>다음 명령어소 8080포트를 종료시킨다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill $(lsof -t -i:8080)</span><br></pre></td></tr></table></figure><p>다른 포트를 확인 및 종료시키고 싶다면 8080부분을 다른 포트로 변경해서 사용하면된다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/etc/kill-port/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Nextjs typescript 절대경로 설정하기</title>
      <link>http://flamingotiger.github.io/frontend/react/nextjs-absolute-path/</link>
      <guid>http://flamingotiger.github.io/frontend/react/nextjs-absolute-path/</guid>
      <pubDate>Wed, 20 Oct 2021 08:04:51 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;상대경로를 사용할 시 패키지 구조가 깊어질 경우 import시에 많이 번거로워지게 됩니다.&lt;br&gt;작은 규모의 어
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>상대경로를 사용할 시 패키지 구조가 깊어질 경우 import시에 많이 번거로워지게 됩니다.<br>작은 규모의 어플리케이션이라면 상관없지만 규모가 커질수록 꼬이기 쉬워집니다.</p><p><em>상대경로</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Acomponent <span class="keyword">from</span> ‘../../../../component/Acomponent’;</span><br></pre></td></tr></table></figure><p><em>절대경로</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Acomponent <span class="keyword">from</span> ‘src/component/Acomponent<span class="string">';</span></span><br></pre></td></tr></table></figure><h2 id="설정하기"><a href="#설정하기" class="headerlink" title="설정하기"></a>설정하기</h2><p>tsconfig파일의 baseUrl을 <code>&quot;.&quot;</code>으로 바꾸고 include에 <code>&quot;**/*.tsx&quot;</code>도 추가해줍니다.</p><figure class="highlight typescript"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="string">"baseUrl"</span>: <span class="string">"."</span>,</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="string">"exclude"</span>: [</span><br><span class="line">        <span class="string">"node_modules"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"include"</span>: [</span><br><span class="line">        <span class="string">"next-env.d.ts"</span>,</span><br><span class="line">        <span class="string">"**/*.ts"</span>,</span><br><span class="line">        <span class="string">"**/*.tsx"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>대부분 이것만 설정해도 절대경로로 사용할수 있습니다.<br>만약 안될시에는 다음 방법을 사용해봅니다.</p><p>next.config.js파일에서 webpack부분을 추가합니다.</p><figure class="highlight typescript"><figcaption><span>next.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    webpack(config) &#123;</span><br><span class="line">config.resolve.modules.push(__dirname); <span class="comment">// 추가</span></span><br><span class="line"><span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이제 import사용시 src로 시작할수 있게 되었습니다.<br>example)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Test <span class="keyword">from</span> <span class="string">"src/components/Test"</span>;</span><br></pre></td></tr></table></figure><p>여기까지만 해도 충분히 간편하게 경로를 설정할 수 있습니다.</p><h2 id="경로를-폴더별로-구분하기"><a href="#경로를-폴더별로-구분하기" class="headerlink" title="경로를 폴더별로 구분하기"></a>경로를 폴더별로 구분하기</h2><p>다음 방법을 이용하면 폴더별로 더욱 쉽게 경로를 관리할 수 있습니다.<br><code>src/component/~~~</code>와 같이 절대경로로 작성되어도 길어보이는 것은 같습니다.<br>이것을 더욱 짧고 간결하게 하기위해서 설정을 몇가지 해보겠습니다.<br>nextjs에서는 설정하기 위해서는 몇가지 파일을 수정해주어야 합니다.</p><ul><li><code>@components</code>: 컴포넌트</li><li><code>@hooks</code>: 전역으로 사용하는 훅스</li><li><code>@services</code>: api 서비스</li><li><code>@utils</code>: 자주사용하는 함수 및 상수들</li></ul><h3 id="next-config-js"><a href="#next-config-js" class="headerlink" title="next.config.js"></a>next.config.js</h3><p>next.config.js 파일을 수정해줍니다.</p><figure class="highlight typescript"><figcaption><span>next.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> nextConfig = <span class="function"><span class="params">phase</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">webpack(config, &#123; webpack &#125;) &#123;</span><br><span class="line">config.resolve = &#123;</span><br><span class="line">alias: &#123;</span><br><span class="line"><span class="string">'@services'</span>: path.resolve(__dirname, <span class="string">'src/services'</span>),</span><br><span class="line"><span class="string">'@utils'</span>: path.resolve(__dirname, <span class="string">'src/utils'</span>),</span><br><span class="line"><span class="string">'@hooks'</span>: path.resolve(__dirname, <span class="string">'src/hooks'</span>),</span><br><span class="line"><span class="string">'@components'</span>: path.resolve(__dirname, <span class="string">'src/components'</span>)</span><br><span class="line">&#125;,</span><br><span class="line">...config.resolve</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> config;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">phase</span> =&gt;</span> nextConfig(phase);</span><br></pre></td></tr></table></figure><h3 id="babelrc"><a href="#babelrc" class="headerlink" title=".babelrc"></a>.babelrc</h3><p>babel-plugin-module-resolver 패키지를 설치하고 .babelrc 파일을 수정해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-plugin-module-resolver</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><figcaption><span>.babelrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    <span class="string">"next/babel"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"plugins"</span>: [</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    [</span><br><span class="line">      <span class="string">"module-resolver"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"root"</span>: [</span><br><span class="line">          <span class="string">"./src"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"alias"</span>: &#123;</span><br><span class="line">          <span class="string">"@services"</span>: <span class="string">"./src/services"</span>,</span><br><span class="line">          <span class="string">"@utils"</span>: <span class="string">"./src/utils"</span>,</span><br><span class="line">          <span class="string">"@hooks"</span>: <span class="string">"./src/hooks"</span>,</span><br><span class="line">          <span class="string">"@components"</span>: <span class="string">"./src/components"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tsconfig"><a href="#tsconfig" class="headerlink" title="tsconfig"></a>tsconfig</h3><p>tsconfig 파일도 수정해 줍니다. 여기서 설정해주지 않으면 컴파일과정에서 에러가 발생합니다. 그리고 자동 입력 기능을 사용할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;compilerOptions&quot;: &#123;</span><br><span class="line">    &lt;!-- ... --&gt;</span><br><span class="line">    &quot;paths&quot;: &#123;</span><br><span class="line">      &quot;@services/*&quot;: [&quot;src/services/*&quot;],</span><br><span class="line">      &quot;@utils/*&quot;: [&quot;src/utils/*&quot;],</span><br><span class="line">      &quot;@hooks/*&quot;: [&quot;src/hooks/*&quot;],</span><br><span class="line">      &quot;@components/*&quot;: [&quot;src/components/*&quot;],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/image/frontend/react/nextjs-absolute-path_0.png" alt="자동 입력"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/react/nextjs-absolute-path/#disqus_thread</comments>
    </item>
    
    <item>
      <title>package.json에 종속되어있는 패키지 최신화하기</title>
      <link>http://flamingotiger.github.io/backend/node/npm-check-updates/</link>
      <guid>http://flamingotiger.github.io/backend/node/npm-check-updates/</guid>
      <pubDate>Mon, 18 Oct 2021 07:09:20 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;&lt;code&gt;npm-check-updates&lt;/code&gt;을 사용해서 package.json의 devDependen
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p><code>npm-check-updates</code>을 사용해서 package.json의 devDependencies, dependencies에 종속되어 있는 패키지를 간편하게 최신화 할 수 있다.</p><h2 id="패키지-설치"><a href="#패키지-설치" class="headerlink" title="패키지 설치"></a>패키지 설치</h2><p>npm-check-updates 패키지를 설치합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-check-updates</span><br></pre></td></tr></table></figure><h2 id="버전확인하기"><a href="#버전확인하기" class="headerlink" title="버전확인하기"></a>버전확인하기</h2><p>다음 명령어를 입력해서 구버전들을 확인합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm outdated</span><br></pre></td></tr></table></figure><p><img src="/image/backend/node/npm-check-updates_0.png" alt="outdated"></p><p>혹은 방금 패키지를 설치한 <code>npm-check-updates</code>를 이용해서 버전을 확인할 수 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncu</span><br></pre></td></tr></table></figure><p><img src="/image/backend/node/npm-check-updates_1.png" alt="ncu"></p><h2 id="업데이트"><a href="#업데이트" class="headerlink" title="업데이트"></a>업데이트</h2><p>간편하게 다음 명령어를 입력해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ncu -u</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>패키지를 확인해보면 버전이 업데이트된 것을 확인할 수 있습니다.</p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>패키지를 최신화하면서 패키지끼리의 연동이 잘못되어 높은 확률로 에러가 나오는 경우가 발생할 수 있습니다.<br>대표적으로 eslint가 그러합니다. 업데이트하고나서 프로젝트를 실행했을때 에러나 경고 문구가 나오는 부분을 잘 읽고, 구글 검색을 통해서 해결하면 최종적으로 패키지 업데이트를 완료했다고 할 수 있습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/backend/node/npm-check-updates/#disqus_thread</comments>
    </item>
    
    <item>
      <title>heroku node 서버 배포하기(typescript)</title>
      <link>http://flamingotiger.github.io/backend/devOps/heroku-typescript-nodejs/</link>
      <guid>http://flamingotiger.github.io/backend/devOps/heroku-typescript-nodejs/</guid>
      <pubDate>Tue, 12 Oct 2021 08:05:24 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;node-js-를-이용해서-heroku-서버-배포하기&quot;&gt;&lt;a href=&quot;#node-js-를-이용해서-heroku-서버-배포하기&quot; class=&quot;headerlink&quot; title=&quot;node js 를 이용해서 heroku 서버 배포하기&quot;&gt;&lt;/a
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="node-js-를-이용해서-heroku-서버-배포하기"><a href="#node-js-를-이용해서-heroku-서버-배포하기" class="headerlink" title="node js 를 이용해서 heroku 서버 배포하기"></a>node js 를 이용해서 heroku 서버 배포하기</h1><h2 id="프로젝트-생성"><a href="#프로젝트-생성" class="headerlink" title="프로젝트 생성"></a>프로젝트 생성</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir heroku-nodejs-typescript</span><br><span class="line">cd heroku-nodejs-typescript</span><br></pre></td></tr></table></figure><h2 id="초기-설정"><a href="#초기-설정" class="headerlink" title="초기 설정"></a>초기 설정</h2><p>npm 기본 설정값을 생성합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h2 id="npm-패키지-설치"><a href="#npm-패키지-설치" class="headerlink" title="npm 패키지 설치"></a>npm 패키지 설치</h2><p>타입스크립트를 포함하여 express를 설치하여 줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @types/express @types/node express nodemon ts-node typescript</span><br></pre></td></tr></table></figure><h2 id="타입스크립트-설정"><a href="#타입스크립트-설정" class="headerlink" title="타입스크립트 설정"></a>타입스크립트 설정</h2><p>tsc 커맨드가 안먹힌다면, typescript를 설치하여 줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g typescript</span><br></pre></td></tr></table></figure><p>타입스크립트 설정 파일을 생성해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc --init</span><br></pre></td></tr></table></figure><p>설정파일이 완료되었다면 tsconfig.json 파일에서 root 바로 밑에 값을 넣어줍니다.<br>include는 src내부의 ts확장자로 끝나는 파일들을 컴파일 하겠다는 설정입니다.<br>exclude는 gitignore처럼 컴파일을 하지 않는 것입니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"include" : [</span><br><span class="line">    "src/**/*.ts"</span><br><span class="line">],</span><br><span class="line">"exclude" : [</span><br><span class="line">    "node_modules"</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="package-json-설정"><a href="#package-json-설정" class="headerlink" title="package.json 설정"></a>package.json 설정</h2><p>package.json에 스크립트와 엔진을 넣어줍니다.<br>engines에는 node와 npm버전을 입력해주면 됩니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 버전 확인 방법</span></span><br><span class="line">npm -v # 6.14.12</span><br><span class="line">node -v # v14.16.1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ...</span></span><br><span class="line">"scripts": &#123;</span><br><span class="line">    "start": "ts-node src/index.ts",</span><br><span class="line">    "dev": "nodemon -x ts-node src/index.ts"</span><br><span class="line">&#125;,</span><br><span class="line">"engines": &#123;</span><br><span class="line">    "node": "v14.16.1",</span><br><span class="line">    "npm": "6.14.12"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> ...</span></span><br></pre></td></tr></table></figure><p><code>@types</code> 파일들은 모두 devDependencies에서 dependencies로 설치를 해주어야합니다. 아니면 서버 올리고 컴파일 에러가 발생합니다.</p><h2 id="src-index-ts-생성"><a href="#src-index-ts-생성" class="headerlink" title="src/index.ts 생성"></a>src/index.ts 생성</h2><p>src 폴더를 만들고 그 내부에 index.ts 파일을 생성합니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">"express"</span>;</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="keyword">const</span> PORT: <span class="built_in">string</span> | <span class="built_in">number</span> = process.env.PORT || <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">"*"</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(<span class="string">"&lt;h1&gt;서버가 실행되었습니다.&lt;/h1&gt;"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(PORT, <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`server port: <span class="subst">$&#123;PORT&#125;</span>`</span>));</span><br></pre></td></tr></table></figure><h2 id="테스트"><a href="#테스트" class="headerlink" title="테스트"></a>테스트</h2><p>로컬 서버 테스트는 <code>npm run dev</code>로 하면됩니다.</p><h2 id="heroku-deploy"><a href="#heroku-deploy" class="headerlink" title="heroku deploy"></a>heroku deploy</h2><p>heroku에 가입과 <a href="https://devcenter.heroku.com/articles/heroku-cli#download-and-install" rel="external nofollow noopener noreferrer" target="_blank">heroku cli 설치</a>는 완료되었다는 전제하에 진행합니다.<br>heroku에 배포해보도록 하겠습니다. 배포하는 방법은 정말 간단합니다.</p><h2 id="heroku-로그인"><a href="#heroku-로그인" class="headerlink" title="heroku 로그인"></a>heroku 로그인</h2><p>프로젝트 내부에서 다음 명령어를 입력하면 브라우저가 열리고 로그인할 수 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku login</span><br></pre></td></tr></table></figure><h2 id="heroku-create"><a href="#heroku-create" class="headerlink" title="heroku create"></a>heroku create</h2><p>heroku 사이트에서 생성을 하거나 다음 명령어를 입력해서 app을 생성할 수 있습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">heroku create</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">heroku create [앱이름]</span><br></pre></td></tr></table></figure><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init .</span><br><span class="line">git add .</span><br><span class="line">git commit -m "heroku setup"</span><br></pre></td></tr></table></figure><h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><p>heroku 서버에 배포합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push heroku main</span><br></pre></td></tr></table></figure><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>nodejs를 통해서 heroku 배포를 해보았습니다.<br>heroku가 무료로 제공하기에 소규모의 개인사이트를 만들떈 적합했습니다.<br>배포하는 과정은 aws보다 비교적 쉬웠습니다.</p><p>배포를 하면 기본적으로 https로 배포가 됩니다. 그래서 바로 프론트엔드 서버에서 api 호출이 가능합니다.<br>만약 도메인을 구매하고, 연결을 하고 싶다면 신용카드를 등록해야합니다. 신용카드를 등록하고 나서 배포를 하면 http로 연결이 되기때문에 https로 보안을 하고 싶다면, 유료버전으로 업데이트를 해야합니다. heroku 머리 잘썼네요.</p><p>요약해서 도메인을 사용하고 싶다면 신용카드 등록과 유료버전 heroku를 사용해야한다는 것입니다.</p><h2 id="heroku-명령어-요약"><a href="#heroku-명령어-요약" class="headerlink" title="heroku 명령어 요약"></a>heroku 명령어 요약</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 헤로쿠 생성</span></span><br><span class="line">heroku create</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">heroku create [앱이름]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 사이트에서는 master로 되어있지만 기본적으로 main으로 바뀜</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 배포할 브런치를 push 및 배포</span></span><br><span class="line">git push heroku main</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 터미널에 해당되는 프로젝트 브라우저 열기</span></span><br><span class="line">heroku open</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 현재 리모트 상태</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 앱이름에 해당하는 사이트로 remote 변환</span></span><br><span class="line">heroku git:remote -a [앱이름]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/backend/devOps/heroku-typescript-nodejs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Styled-components Typescript 적용하기 (+Media query)</title>
      <link>http://flamingotiger.github.io/style/styled-components-typescript/</link>
      <guid>http://flamingotiger.github.io/style/styled-components-typescript/</guid>
      <pubDate>Fri, 30 Apr 2021 03:37:34 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;기존에 &lt;a href=&quot;https://flamingotiger.github.io/style/styled-comp
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>기존에 <a href="https://flamingotiger.github.io/style/styled-components-responsive/">styled-components 반응형 및 스타일 리셋 설정하기 포스트</a>을 통해서 스타일 최초 설정해보았습니다.</p><p><code>theme</code>를 입력했을때 typescript로 자동으로 연결해주는 부분이 미흡했습니다. 타입스크립트를 styled-components 와 제대로 사용해보도록 하겠습니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i styled-components &amp;&amp; npm i -D <span class="meta">@types</span>/styled-components</span><br></pre></td></tr></table></figure><p>styled components를 설치해줍니다.</p><h2 id="초기설정"><a href="#초기설정" class="headerlink" title="초기설정"></a>초기설정</h2><h3 id="테마설정"><a href="#테마설정" class="headerlink" title="테마설정"></a>테마설정</h3><p>테마로 사용할 폰트, 색상, 레이아웃 등을 선언해줍니다.</p><figure class="highlight typescript"><figcaption><span>src/styles/theme.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> color = &#123;</span><br><span class="line">  white: <span class="string">"white"</span>,</span><br><span class="line">  black: <span class="string">"black"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> theme = &#123;</span><br><span class="line">  color,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> Theme = <span class="keyword">typeof</span> theme;</span><br></pre></td></tr></table></figure><p>테마를 불러올수 있게 ThemeProvider로 App을 감싸줍니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import &#123; theme &#125; from &apos;./styles/theme.ts&apos;;</span><br><span class="line">import &#123; ThemeProvider &#125; from &apos;styled-components&apos;;</span><br><span class="line"></span><br><span class="line">//...</span><br><span class="line">&lt;ThemeProvider theme=&#123;theme&#125;&gt;</span><br><span class="line">    &lt;App/&gt;</span><br><span class="line">&lt;/ThemeProvider&gt;</span><br><span class="line">//...</span><br></pre></td></tr></table></figure><p><img src="/image/style/styled-components-typescript_0.png" alt="타입정의 이전"></p><p>이것만으로 테마를 사용할수는 있습니다만, 타입스크립트를 제대로 사용하기 위해서는 styled.d.ts를 입력해주어야합니다. styled.d.ts를 정의 해주면 다음과 같습니다.</p><p><img src="/image/style/styled-components-typescript_1.png" alt="타입정의 이후"></p><p>자동완성이나 어떤값이 들어가는지 미리 확인할 수 있기때문에 더욱 styled-components를 사용하기 쉬워집니다.</p><h3 id="styled-d-ts"><a href="#styled-d-ts" class="headerlink" title="styled.d.ts"></a>styled.d.ts</h3><p>정의하는 방법은 정말로 간단합니다.</p><figure class="highlight typescript"><figcaption><span>src/typing/styled.d.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Theme &#125; <span class="keyword">from</span> <span class="string">"../styles/theme"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CSSProp &#125; <span class="keyword">from</span> <span class="string">"styled-components"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "styled-components" &#123;</span><br><span class="line">  <span class="comment">// eslint-disable-next-line @typescript-eslint/no-empty-interface</span></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">interface</span> DefaultTheme <span class="keyword">extends</span> Theme &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> "react" &#123;</span><br><span class="line">  <span class="keyword">interface</span> Attributes &#123;</span><br><span class="line">    css?: CSSProp | CSSObject;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>// eslint-disable-next-line @typescript-eslint/no-empty-interface</code> 이 부분은 린트에서 에러가 날때 타입이 {} 빈값으로 되어있는 룰을 무시해주는 역할을 합니다.</p><p><code>declare modlue &quot;react&quot;~~~</code>는 코드를 다음과 같이 쉽게 사용하기 위해 초기 설정을 해준것 입니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">"styled-components/macro"</span>;</span><br><span class="line"></span><br><span class="line">&lt;div</span><br><span class="line">  css=&#123;<span class="string">`</span></span><br><span class="line"><span class="string">    border: 1px solid red;</span></span><br><span class="line"><span class="string">  `</span>&#125;</span><br><span class="line">&gt;</span><br><span class="line">  Test</span><br><span class="line">&lt;<span class="regexp">/div&gt;;</span></span><br></pre></td></tr></table></figure><p><code>styled.d.ts</code>파일에서 정의해주는 역할을 합니다.</p><h2 id="Media-query-반응형"><a href="#Media-query-반응형" class="headerlink" title="Media query 반응형"></a>Media query 반응형</h2><p>타입정의를 하고 나면 <a href="https://flamingotiger.github.io/style/styled-components-responsive/">styled-components 반응형 및 스타일 리셋 설정하기 포스트</a>에서 사용한 코드에서 에러가 나는 것을 확인할수 있습니다.</p><p><img src="/image/style/styled-components-typescript_2.png" alt="에러"></p><p>기존에 작성했던 코드를 수정 혹은 새로 작성하겠습니다.</p><figure class="highlight typescript"><figcaption><span>src/styles/media.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; CSSProp, css &#125; <span class="keyword">from</span> <span class="string">"styled-components"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MediaQueryProps = &#123;</span><br><span class="line">  mobile: <span class="built_in">number</span>;</span><br><span class="line">  tablet: <span class="built_in">number</span>;</span><br><span class="line">  desktop: <span class="built_in">number</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sizes: MediaQueryProps = &#123;</span><br><span class="line">  mobile: <span class="number">580</span>,</span><br><span class="line">  tablet: <span class="number">768</span>,</span><br><span class="line">  desktop: <span class="number">1284</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// // Iterate through the sizes and create a media template</span></span><br><span class="line"><span class="keyword">type</span> BackQuoteArgs = <span class="built_in">string</span>[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> media = &#123;</span><br><span class="line">  mobile: (literals: TemplateStringsArray, ...args: BackQuoteArgs): <span class="function"><span class="params">CSSProp</span> =&gt;</span></span><br><span class="line">    css`<span class="css"></span></span><br><span class="line"><span class="css">      @<span class="keyword">media</span> only screen and (max-width: </span><span class="subst">$&#123;sizes.mobile&#125;</span><span class="css">px) &#123;</span></span><br><span class="line"><span class="css">        </span><span class="subst">$&#123;css(literals, ...args)&#125;</span><span class="css"></span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    `</span>,</span><br><span class="line">  tablet: (literals: TemplateStringsArray, ...args: BackQuoteArgs): <span class="function"><span class="params">CSSProp</span> =&gt;</span></span><br><span class="line">    css`<span class="css"></span></span><br><span class="line"><span class="css">      @<span class="keyword">media</span> only screen and (max-width: </span><span class="subst">$&#123;sizes.tablet&#125;</span><span class="css">px) &#123;</span></span><br><span class="line"><span class="css">        </span><span class="subst">$&#123;css(literals, ...args)&#125;</span><span class="css"></span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    `</span>,</span><br><span class="line">  desktop: (literals: TemplateStringsArray, ...args: BackQuoteArgs): <span class="function"><span class="params">CSSProp</span> =&gt;</span></span><br><span class="line">    css`<span class="css"></span></span><br><span class="line"><span class="css">      @<span class="keyword">media</span> only screen and (max-width: </span><span class="subst">$&#123;sizes.desktop&#125;</span><span class="css">px) &#123;</span></span><br><span class="line"><span class="css">        </span><span class="subst">$&#123;css(literals, ...args)&#125;</span><span class="css"></span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    `</span>,</span><br><span class="line">&#125; <span class="keyword">as</span> Record&lt;</span><br><span class="line">  keyof <span class="keyword">typeof</span> sizes,</span><br><span class="line">  (l: TemplateStringsArray, ...p: BackQuoteArgs) =&gt; CSSProp</span><br><span class="line">&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> media;</span><br></pre></td></tr></table></figure><p>이후 테마에 연결을 해주도록 합니다.</p><figure class="highlight typescript"><figcaption><span>src/styles/theme.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> media <span class="keyword">from</span> <span class="string">"./media"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> color = &#123;</span><br><span class="line">  white: <span class="string">"white"</span>,</span><br><span class="line">  black: <span class="string">"black"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> theme = &#123;</span><br><span class="line">  color,</span><br><span class="line">  media,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> Theme = <span class="keyword">typeof</span> theme;</span><br></pre></td></tr></table></figure><p>이후 사용해보면 정상적으로 작동하는 것을 알 수 있습니다.</p><p><img src="/image/style/styled-components-typescript_3.png" alt="결과"></p><h2 id="회고"><a href="#회고" class="headerlink" title="회고"></a>회고</h2><p>styled-components에 styled.d.ts를 적용하면 media적용시에 <code>TemplateStringsArray 부분이 에러</code>가 발생했는데 검색으로도 해결하기 힘든 문제였습니다. 구글 검색과 새 프로젝트를 만들어 하나하나 분석해가면서 해보니 해결할 수 있었습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/style/styled-components-typescript/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Favicon 웹사이트에 적용하기</title>
      <link>http://flamingotiger.github.io/etc/etc/favicon/</link>
      <guid>http://flamingotiger.github.io/etc/etc/favicon/</guid>
      <pubDate>Fri, 30 Apr 2021 03:36:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;파비콘(favicon)이라는 명칭으로 웹사이트 상단 탭에 나오는 아이콘 혹은 브라우저 어플 아이콘등을 뜻합니다.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>파비콘(favicon)이라는 명칭으로 웹사이트 상단 탭에 나오는 아이콘 혹은 브라우저 어플 아이콘등을 뜻합니다.<br>주로 웹사이트를 대표하는 로고를 많이 사용합니다.</p><h2 id="Favicon-만들기"><a href="#Favicon-만들기" class="headerlink" title="Favicon 만들기"></a>Favicon 만들기</h2><p>로고파일(png, jpg등)을 준비해줍니다.<br>파비콘 파일을 만들어 주는 <a href="https://www.favicon-generator.org/" rel="external nofollow noopener noreferrer" target="_blank">Favicon Generator</a>사이트로 이동합니다.<br><img src="/image/etc/etc/favicon_0.png" alt="Favicon Generator 사이트"></p><p>파일 등록 버튼을 눌러 파일을 업로드 합니다.<br>이후 Create favicon 버튼을 클릭하여 favicon 파일을 만듭니다. </p><p><img src="/image/etc/etc/favicon_1.png" alt="Favicon 제작"><br>다음과 같은 페이지가 나옵니다.<br>Download the generated favicon 링크를 클릭하여 다운로드를 받고 하단의 html 태그들을 복사합니다.</p><h3 id="적용하기"><a href="#적용하기" class="headerlink" title="적용하기"></a>적용하기</h3><p>파일을 프로젝트 내부에 저장하고, 사용하고자하는 페이지 상단 head 부분에 복사한 태그를 넣어줍니다.<br>리액트 프로젝트의 경우 <code>public/index.html</code> 파일의 head 부분에 태그를 붙여넣기 해줍니다.<br>그러면 다음과 같이 적용이 완료됩니다.<br><img src="/image/etc/etc/favicon_2.png" alt="최종 결과물"></p><p>에</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/etc/etc/favicon/#disqus_thread</comments>
    </item>
    
    <item>
      <title>리액트 프로젝트에 폰트추가</title>
      <link>http://flamingotiger.github.io/frontend/react/react-add-font/</link>
      <guid>http://flamingotiger.github.io/frontend/react/react-add-font/</guid>
      <pubDate>Wed, 07 Apr 2021 07:29:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;리액트 프로젝트에서 폰트를 추가 하는 방법을 알아보겠습니다.&lt;br&gt;구글 폰트에서 링크를 통해 적용하는 방법과 폰
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>리액트 프로젝트에서 폰트를 추가 하는 방법을 알아보겠습니다.<br>구글 폰트에서 링크를 통해 적용하는 방법과 폰트를 다운로드해서 프로젝트에 적용하는 방법이 있습니다.</p><ul><li><a href="#구글-웹폰트를-통해서-적용하기">구글 웹폰트를 통해서 적용하기</a></li><li><a href="#프로젝트에-직접-적용하기">프로젝트에 직접 적용하기</a></li></ul><h2 id="구글-웹폰트를-통해서-적용하기"><a href="#구글-웹폰트를-통해서-적용하기" class="headerlink" title="구글 웹폰트를 통해서 적용하기"></a>구글 웹폰트를 통해서 적용하기</h2><p><a href="https://fonts.google.com/" rel="external nofollow noopener noreferrer" target="_blank">구글 폰트 사이트</a>에 접속해서 마음에 드는 폰트를 찾습니다.</p><p><img src="/image/frontend/react/react-add-font-0.png" alt="구글폰트"></p><p>폰트를 찾았다면 해당 폰트를 선택하고 하단에 +버튼을 클릭해 선택합니다.</p><p><img src="/image/frontend/react/react-add-font-1.png" alt="폰트선택"></p><p>폰트 선택을 하고 나면 link와 @import를 사용할 수 있습니다.</p><p><img src="/image/frontend/react/react-add-font-2.png" alt="import"></p><h2 id="프로젝트에-직접-적용하기"><a href="#프로젝트에-직접-적용하기" class="headerlink" title="프로젝트에 직접 적용하기"></a>프로젝트에 직접 적용하기</h2><h3 id="폰트-설치하기"><a href="#폰트-설치하기" class="headerlink" title="폰트 설치하기"></a>폰트 설치하기</h3><p><a href="https://fonts.google.com/" rel="external nofollow noopener noreferrer" target="_blank">구글 폰트 사이트</a>에 접속해서 마음에 드는 폰트를 찾습니다.</p><p>폰트를 선택한 이후 우측 상단에 다운로드 버튼을 클릭해 파일을 다운받습니다.<br>파일 압축을 풀면 내부에 ttf파일들이 있습니다.</p><p><img src="/image/frontend/react/react-add-font-3.png" alt="download ttf"></p><p>다른 브라우저에서 제대로 폰트가 나오려면 파일들을 woff eot파일로 변환을 해주는 과정이 필요합니다.</p><p><a href="https://anyconv.com/ko/ttf-to-eot-byeonhwangi/" rel="external nofollow noopener noreferrer" target="_blank">any conv 폰트 변환 사이트</a>로 접속해서 파일들을 업로드 합니다.</p><p><img src="/image/frontend/react/react-add-font-4.png" alt="any conv사이트"></p><p>파일을 업로드한후 변환하고자 하는 타입으로 설정을 변경합니다.<br><img src="/image/frontend/react/react-add-font-5.png" alt="타입 변경"></p><p>파일 변환이 완료되었으면 다운로드를 한 이후 파일명을 변경해줍니다.<br><img src="/image/frontend/react/react-add-font-6.png" alt="변환 완료"></p><h3 id="프로젝트에-설정하기"><a href="#프로젝트에-설정하기" class="headerlink" title="프로젝트에 설정하기"></a>프로젝트에 설정하기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">src/</span><br><span class="line">    └── static/</span><br><span class="line">        ├── images</span><br><span class="line">        └── fonts/</span><br><span class="line">            ├── Roboto-Regular.ttf</span><br><span class="line">            ├── Roboto-Regular.woff</span><br><span class="line">            ├── Roboto-Regular.eot</span><br><span class="line">            └── font.css</span><br></pre></td></tr></table></figure><p>폰트를 프로젝트의 <code>src/static/fonts</code> 폴더에 넣어 줍니다. 파일 경로는 이미지와 같이 정적 파일들을 저장하는 폴더에 넣으면 됩니다.</p><p><a href="https://cssreference.io/property/font-weight/" rel="external nofollow noopener noreferrer" target="_blank">폰트 굵기</a>에 대한 숫자 입니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Font Weight</span><br><span class="line">100 Thin</span><br><span class="line">200 Extra Light</span><br><span class="line">300 Light</span><br><span class="line">400 Normal</span><br><span class="line">500 Medium</span><br><span class="line">600 Semi Bold</span><br><span class="line">700 Bold</span><br><span class="line">800 Extra Bold</span><br><span class="line">900 Ultra Bold</span><br></pre></td></tr></table></figure><p><code>static/fonts</code>파일 내부에 css파일을 생성하고 다음과 같이 작성합니다.</p><figure class="highlight css"><figcaption><span>font.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">  <span class="comment">/* 사용할 폰트의 이름 */</span></span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"Roboto"</span>;</span><br><span class="line">  <span class="attribute">font-display</span>: fallback;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">  src: 사용할 폰트의 위치 및 형식 </span></span><br><span class="line"><span class="comment">     Safari, Android, iOS =&gt; ttf</span></span><br><span class="line"><span class="comment">     Modern Browsers =&gt; woff</span></span><br><span class="line"><span class="comment">     IE6-IE8 =&gt; eot</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">"./Roboto-Regular.ttf"</span>) <span class="built_in">format</span>(<span class="string">"truetype"</span>), <span class="built_in">url</span>(<span class="string">"./Roboto-Regular.woff"</span>)</span><br><span class="line">      <span class="built_in">format</span>(<span class="string">"woff"</span>), <span class="built_in">url</span>(<span class="string">"./Roboto-Regular.eot?iefix"</span>) <span class="built_in">format</span>(<span class="string">"embedded-opentype"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 사용할 폰트의 기본 스타일 */</span></span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>eot부분에 <code>#iefix</code>을 입력해주는 이유는 IE6~8의 경우 format()구문을 인식하지 못하기 때문에 삽입한 것입니다.</p><p>이후 최상단 루트 파일에 다음 css를 불러옵니다.</p><figure class="highlight javascript"><figcaption><span>src/index.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"./static/fonts/font.css"</span>;</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><p>이후 css에서 다음과 같은 코드를 입력하면 폰트가 적용됩니다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"Roboto"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>두가지 방법으로 폰트를 설정할 수 있습니다. 글꼴파일 용량이 크거나 사이트에 추가적인 HTTP요청이 들어갈 수도 있기에 웹 사이트 로드 속도가 늦어질 수 있습니다. 글꼴을 꼭 사용해야 하는지 잘 고려해야합니다. </p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/react/react-add-font/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Rollup을 사용해서 npm 배포하기</title>
      <link>http://flamingotiger.github.io/frontend/DevEnv/rollup-setup/</link>
      <guid>http://flamingotiger.github.io/frontend/DevEnv/rollup-setup/</guid>
      <pubDate>Wed, 07 Apr 2021 07:22:19 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;제작중인 라이브러리를 npm에 배포하는 방법입니다.&lt;br&gt;webpack 도구와는 조금 다른 rollup을 사용해
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>제작중인 라이브러리를 npm에 배포하는 방법입니다.<br>webpack 도구와는 조금 다른 rollup을 사용해서 번들링 하도록 하려고 합니다.<br>webpack을 쓸 수도 있는데 rollup을 쓰는 이유는 webpack은 ES Module 형태로 번들을 할 수 없습니다.<br>webpack을 사용 할 때에는 일반적으로 commonjs 형태로 번들링을 하게 됩니다<br>commonjs로 번들링한 라이브러리를 나중에 다른 프로젝트에서 사용하게 되면 <code>Tree-shaking</code>이 지원되지 않습니다.</p><h2 id="간단요약"><a href="#간단요약" class="headerlink" title="간단요약"></a>간단요약</h2><p>webpack은 웹 어플리케이션을 제작시 주로 사용하고<br>rollup은 라이브러리 제작시 사용합니다.<br>lerna는 라이브러리를 패키지 분리할때 사용합니다.<br>lerna예시로는 @name/blabl, @name/blabla1 와 같이 사용합니다.</p><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><p>rollup 패키지를 설치하겠습니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D rollup @rollup/plugin-node-resolve @rollup/plugin-commonjs rollup-plugin-terser @rollup/plugin-url @rollup/plugin-image rollup-plugin-typescript2 rollup-plugin-peer-deps-external rollup-plugin-sourcemaps @rollup/plugin-babel @svgr/rollup</span><br></pre></td></tr></table></figure><ul><li><strong>rollup</strong>: rollup 패키지 입니다.</li><li><strong>@rollup/plugin-node-resolve</strong>: node_modules에서 써드파티 모듈을 사용하는 용도로 사용합니다.</li><li><strong>@rollup/plugin-commonjs</strong>: CommonJS 모듈을 ES6으로 변환하는 롤업 플러그인입니다.</li><li><strong>rollup-plugin-terser</strong>: 생성 된 es 번들을 최소화하기위한 롤업 플러그인 후드 아래에서 terser 를 사용합니다.</li><li><strong>@rollup/plugin-url</strong>: 파일을 데이터 URI 또는 ​​ES모듈로 가져오는 롤업 플러그인입니다.</li><li><strong>@rollup/plugin-image</strong>: JPG, PNG, GIF, SVG 및 WebP 파일을 가져 오는 롤업 플러그인입니다.</li><li><strong>rollup-plugin-typescript2</strong>: 타입스크립트를 지원합니다.</li><li><strong>rollup-plugin-peer-deps-external</strong>: peerDependency로 설치된 라이브러리의 코드가 번들링된 결과에 포함되지 않고, import 구문으로 불러와서 사용할 수 있게 해주는 플러그인입니다.</li><li><strong>rollup-plugin-sourcemaps</strong>: rollup으로 번들하기 전에 소스 맵으로 파일을 변환합니다.</li><li><strong>@rollup/plugin-babel</strong>: rollup에서 babel 을 사용 할 수 있게 해주는 플러그인입니다. <em>rollup-plugin-babel은 deprecated되었습니다.</em></li></ul><h2 id="설정하기"><a href="#설정하기" class="headerlink" title="설정하기"></a>설정하기</h2><p>패키지가 모두 설치가 완료되었습니다.<br>이제 rollup 설정을 해보도록 하겠습니다.</p><h3 id="peerDependency-설정하기"><a href="#peerDependency-설정하기" class="headerlink" title="peerDependency 설정하기"></a>peerDependency 설정하기</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --peer react react-dom styled-components</span><br></pre></td></tr></table></figure><p>react, react-dom, styled-components을 peer로 설치해주도록 합니다.</p><figure class="highlight javascript"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"peerDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"react"</span>: <span class="string">"^16.12.0"</span>,</span><br><span class="line">    <span class="string">"react-dom"</span>: <span class="string">"^16.12.0"</span>,</span><br><span class="line">    <span class="string">"styled-components"</span>: <span class="string">"^5.0.1"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="rollup-config-js-설정하기"><a href="#rollup-config-js-설정하기" class="headerlink" title="rollup.config.js 설정하기"></a>rollup.config.js 설정하기</h3><p>rollup.config.js 파일을 생성후 설정해주도록 합니다</p><figure class="highlight javascript"><figcaption><span>rollup.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> commonjs <span class="keyword">from</span> <span class="string">"@rollup/plugin-commonjs"</span>;</span><br><span class="line"><span class="keyword">import</span> typescript <span class="keyword">from</span> <span class="string">"rollup-plugin-typescript2"</span>;</span><br><span class="line"><span class="keyword">import</span> resolve <span class="keyword">from</span> <span class="string">"@rollup/plugin-node-resolve"</span>;</span><br><span class="line"><span class="keyword">import</span> svgr <span class="keyword">from</span> <span class="string">"@svgr/rollup"</span>;</span><br><span class="line"><span class="keyword">import</span> image <span class="keyword">from</span> <span class="string">"@rollup/plugin-image"</span>;</span><br><span class="line"><span class="keyword">import</span> url <span class="keyword">from</span> <span class="string">"@rollup/plugin-url"</span>;</span><br><span class="line"><span class="keyword">import</span> peerDepsExternal <span class="keyword">from</span> <span class="string">"rollup-plugin-peer-deps-external"</span>;</span><br><span class="line"><span class="keyword">import</span> sourcemaps <span class="keyword">from</span> <span class="string">"rollup-plugin-sourcemaps"</span>;</span><br><span class="line"><span class="keyword">import</span> babel <span class="keyword">from</span> <span class="string">"@rollup/plugin-babel"</span>;</span><br><span class="line"><span class="keyword">import</span> pkg <span class="keyword">from</span> <span class="string">"./package.json"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> extensions = [<span class="string">".js"</span>, <span class="string">".jsx"</span>, <span class="string">".ts"</span>, <span class="string">".tsx"</span>];</span><br><span class="line"><span class="keyword">const</span> external = [<span class="string">"react"</span>, <span class="string">"react-dom"</span>, <span class="string">"styled-components"</span>];</span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  input: pkg.source,</span><br><span class="line">  output: [</span><br><span class="line">    &#123;</span><br><span class="line">      sourcemap: <span class="literal">true</span>,</span><br><span class="line">      file: pkg.main,</span><br><span class="line">      format: <span class="string">"cjs"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      sourcemap: <span class="literal">true</span>,</span><br><span class="line">      file: pkg.module,</span><br><span class="line">      format: <span class="string">"esm"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    external,</span><br><span class="line">    plugins: [</span><br><span class="line">      resolve(&#123; extensions &#125;),</span><br><span class="line">      babel(&#123; <span class="attr">exclude</span>: <span class="string">"node_modules/**"</span> &#125;),</span><br><span class="line">      commonjs(&#123; <span class="attr">include</span>: <span class="string">"node_modules/**"</span> &#125;),</span><br><span class="line">      typescript(&#123; <span class="attr">tsconfig</span>: <span class="string">"./tsconfig.json"</span>, <span class="attr">clean</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">      svgr(),</span><br><span class="line">      image(),</span><br><span class="line">      url(),</span><br><span class="line">      peerDepsExternal(),</span><br><span class="line">      sourcemaps(),</span><br><span class="line">      del(&#123; <span class="attr">targets</span>: [<span class="string">"dist/*"</span>] &#125;),</span><br><span class="line">    ],</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config;</span><br></pre></td></tr></table></figure><h2 id="tsconfig-json-설정"><a href="#tsconfig-json-설정" class="headerlink" title="tsconfig.json 설정"></a>tsconfig.json 설정</h2><figure class="highlight json"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">    <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">    <span class="attr">"lib"</span>: [<span class="string">"dom"</span>, <span class="string">"dom.iterable"</span>, <span class="string">"esnext"</span>],</span><br><span class="line">    <span class="attr">"jsx"</span>: <span class="string">"react"</span>,</span><br><span class="line">    <span class="attr">"declaration"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"declarationDir"</span>: <span class="string">"./dist"</span>,</span><br><span class="line">    <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"outDir"</span>: <span class="string">"./dist"</span>,</span><br><span class="line">    <span class="attr">"strict"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"noImplicitThis"</span>: <span class="literal">false</span> /* Raise error on 'this' expressions with an implied 'any' type. */,</span><br><span class="line">    <span class="attr">"baseUrl"</span>: <span class="string">"src"</span>,</span><br><span class="line">    <span class="attr">"esModuleInterop"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"forceConsistentCasingInFileNames"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"include"</span>: [<span class="string">"src"</span>],</span><br><span class="line">  <span class="attr">"exclude"</span>: [<span class="string">"node_modules"</span>, <span class="string">"dist"</span>, <span class="string">"**/*.stories.tsx"</span>, <span class="string">"cypress"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="package-json-및-모듈-설정"><a href="#package-json-및-모듈-설정" class="headerlink" title="package.json 및 모듈 설정"></a>package.json 및 모듈 설정</h2><p><code>package.json</code> 과 내보낼 모듈을 설정해주어야합니다.</p><figure class="highlight typescript"><figcaption><span>src/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Rfdd <span class="keyword">from</span> <span class="string">"./view/Rfdd"</span>;</span><br><span class="line"><span class="keyword">import</span> RfddOption <span class="keyword">from</span> <span class="string">"./view/RfddOption"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; Rfdd, RfddOption &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 혹은</span></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Rfdd &#125; <span class="keyword">from</span> <span class="string">"./view.Rfdd"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> RfddOption &#125; <span class="keyword">from</span> <span class="string">"./view/RfddOption"</span>;</span><br></pre></td></tr></table></figure><p><code>package.json</code>파일을 수정 하겠습니다.</p><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"react-free-dropdown"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"Easy custom dropdown list with React"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"dist/react-free-dropdown.js"</span>,</span><br><span class="line">  <span class="attr">"types"</span>: <span class="string">"dist/index.d.ts"</span>,</span><br><span class="line">  <span class="attr">"sideEffects"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"rollup -c"</span></span><br><span class="line">    //...</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"repository"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"git+https://github.com/flamingotiger/react-free-dropdown.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [<span class="string">"free"</span>, <span class="string">"dropdown"</span>, <span class="string">"custom"</span>, <span class="string">"react.js"</span>, <span class="string">"react"</span>],</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"flamingotiger &lt;hhbhong@gmail.com&gt;"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"bugs"</span>: &#123;</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://github.com/flamingotiger/react-free-dropdown/issues"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"files"</span>: [<span class="string">"src"</span>, <span class="string">"dist"</span>]</span><br><span class="line">  //...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>name</strong>: 프로젝트(패키지) 이름을 설정합니다.</li><li><strong>version</strong>: 프로젝트(패키지)의 버전을 설정해주도록 합니다.</li><li><strong>description</strong>: 프로젝트(패키지)의 설명을 지정합니다.</li><li><strong>main</strong>: 프로젝트(패키지)의 기본 진입점(entry point)를 지정합니다.</li><li><strong>module</strong>: 프로젝트(패키지)의 기본 진입점(entry point)를 지정합니다.</li><li><strong>keywords</strong>: 프로젝트(패키지)의 키워드를 배열로 지정합니다.</li><li><strong>types</strong>: 타입스크립트 사용시 기본 진입점(entry point)를 지정합니다.</li><li><strong>license</strong>: 프로젝트(패키지) 사용을 허용하는 방법과 제한 사항을 알 수 있도록 라이센스를 지정합니다.</li></ul><h2 id="npmignore"><a href="#npmignore" class="headerlink" title=".npmignore"></a>.npmignore</h2><p>파일 최상단 루트 폴더에 <code>.gitignore</code>처럼 <code>.npmignore</code>파일을 생성해줍니다.<br>npm에 배포할 필요없는 폴더 혹은 파일을 지정해줍니다.</p><figure class="highlight"><figcaption><span>.npmignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">yarn-error.log</span><br><span class="line">npm-debug.log</span><br><span class="line">npm-debug.log.*</span><br><span class="line">yarn-error.log</span><br><span class="line">yarn.lock</span><br><span class="line">.DS_Store</span><br><span class="line">.vscode</span><br><span class="line">.idea</span><br><span class="line">.github</span><br><span class="line">stories</span><br><span class="line">storybook-static</span><br><span class="line">.storybook</span><br><span class="line">cypress</span><br><span class="line">cypress.json</span><br><span class="line">.npmignore</span><br><span class="line">.babelrc</span><br><span class="line">.eslintrc</span><br><span class="line">jest.config.js</span><br><span class="line">tsconfig.json</span><br><span class="line">.prettierrc</span><br><span class="line">rollup.config.js</span><br><span class="line">rollup.min.config.js</span><br></pre></td></tr></table></figure><h2 id="NPM-배포"><a href="#NPM-배포" class="headerlink" title="NPM 배포"></a>NPM 배포</h2><p>이것으로 배포 준비가 완료되었습니다.</p><h3 id="npm-로그인"><a href="#npm-로그인" class="headerlink" title="npm 로그인"></a>npm 로그인</h3><p><a href="https://www.npmjs.com/" rel="external nofollow noopener noreferrer" target="_blank">npm 공식 홈페이지</a>로 접속해서 로그인 해주도록 합니다.<br>로그인 계정이 없다면 회원가입을 해줍니다.<br>회원가입시 이메일 인증을 필수로 해야합니다.<br><img src="/image/frontend/DevEnv/rollup-npm-deploy_0.png" alt="로그인"></p><h3 id="npm-배포하기"><a href="#npm-배포하기" class="headerlink" title="npm 배포하기"></a>npm 배포하기</h3><p>프로젝트로 돌아와서 npm cli 몇가지를 사용합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd project</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><p><code>npm adduser</code> 혹은 <code>npm login</code>을 입력하고 유저이름 비밀번호 그리고 이메일 인증한 이메일도 입력해야합니다.</p><p>로그인이 성공했다면 <code>npm publish</code> 를 입력해줍니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><p>배포에서 다음과 같은 에러가 발생시<br><img src="/image/frontend/DevEnv/rollup-npm-deploy_1.png" alt="npm 배포 에러"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --access=public</span><br></pre></td></tr></table></figure><p>커맨드를 입력해줍니다.<br>관련 <a href="https://github.com/snowdreamtech/jweixin/issues/1" rel="external nofollow noopener noreferrer" target="_blank">Github Issue</a></p><p>추가로 로그인이 되어있는지 확인하려면<br><code>npm whoami</code>를 입력해주면 확인할 수 있습니다.</p><p>로그아웃은 <code>npm logout</code>을 입력하면 됩니다.</p><p>이후 사이트를 확인하면 등록이 된 것을 확인할 수 있습니다.<br><img src="/image/frontend/DevEnv/rollup-npm-deploy_2.png" alt="npm 배포완료"></p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/DevEnv/rollup-setup/#disqus_thread</comments>
    </item>
    
    <item>
      <title>flutter에 스타일(margin, padding, border, border-radius) 적용하기</title>
      <link>http://flamingotiger.github.io/frontend/flutter/flutter-style/</link>
      <guid>http://flamingotiger.github.io/frontend/flutter/flutter-style/</guid>
      <pubDate>Mon, 22 Feb 2021 01:42:48 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;시작하기&quot;&gt;&lt;a href=&quot;#시작하기&quot; class=&quot;headerlink&quot; title=&quot;시작하기&quot;&gt;&lt;/a&gt;시작하기&lt;/h1&gt;&lt;p&gt;웹에서 엘리먼트에 스타일을 넣으려면 css를 사용하는 것은 대부분 아는 사실입니다. 크로스 플랫폼의 react 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="시작하기"><a href="#시작하기" class="headerlink" title="시작하기"></a>시작하기</h1><p>웹에서 엘리먼트에 스타일을 넣으려면 css를 사용하는 것은 대부분 아는 사실입니다. 크로스 플랫폼의 react native의 경우에는 js와 같은 방식으로 사용합니다. 하지만 사용방법은 크게 다르지 않죠.</p><p>flutter에서는 margin, padding, border, border-radius 등을 어떻게 넣을 수 있을까 사용해보도록 하겠습니다.</p><h2 id="기본"><a href="#기본" class="headerlink" title="기본"></a>기본</h2><p>기본적으로 스타일을 넣기 위해서는 Container 클래스를 이용해야 합니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  styles....,</span><br><span class="line">  child:...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Margin"><a href="#Margin" class="headerlink" title="Margin"></a>Margin</h2><p>일반적인 css나 js처럼 <code>margin:30</code> 이런 식으로 작성하면 좋겠지만, flutter에서는 조금 다릅니다.</p><p>다음과 같이 EdgeInsets이라는 클래스를 사용해야 합니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  margin: EdgeInsets.only(bottom:<span class="number">10</span>),</span><br><span class="line">  child:...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>EdgeInsets에서 margin을 주는 방법이 있습니다. 기존 css와 비교하면서 몇가지 알아보겠습니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전부</span></span><br><span class="line">EdgeInsets.all(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 한 지점만</span></span><br><span class="line">EdgeInsets.only(bottom: <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 좌위 상위 우위 하위</span></span><br><span class="line">EdgeInsets.fromLTRB(left, top, right, bottom)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 가로와 세로</span></span><br><span class="line">EdgeInsets.symmetric(horizontal: <span class="number">20</span>, vertical: <span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">margin-bottom</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: <span class="selector-tag">top</span> <span class="selector-tag">right</span> <span class="selector-tag">bottom</span> <span class="selector-tag">left</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: 10 20 10 20;</span><br></pre></td></tr></table></figure><h2 id="Padding"><a href="#Padding" class="headerlink" title="Padding"></a>Padding</h2><p>패딩도 margin과 사용법은 같습니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  padding: EdgeInsets.all(<span class="number">10</span>),</span><br><span class="line">  child:...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Border"><a href="#Border" class="headerlink" title="Border"></a>Border</h2><p>Container 클래스에 margin과 padding을 사용했는데, border도 넣고싶다면 다음과 같이 작성하면 됩니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  margin: EdgeInsets.all(<span class="number">4</span>),</span><br><span class="line">  padding: EdgeInsets.all(<span class="number">10</span>),</span><br><span class="line">  decoration: BoxDecoration(</span><br><span class="line">    border: Border.all(</span><br><span class="line">        color: Colors.black,</span><br><span class="line">        width: <span class="number">5</span>,</span><br><span class="line">    ),</span><br><span class="line">  )</span><br><span class="line">  child:...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Container의 decoration에 BoxDecoration클래스를 이용해서 border를 넣어줄수 있습니다.</p><h2 id="Border-Radius"><a href="#Border-Radius" class="headerlink" title="Border Radius"></a>Border Radius</h2><p>border radius 는 기존 border 스타일을 넣는 방법과 흡사하게 BoxDecoration을 사용합니다.</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  margin: EdgeInsets.all(<span class="number">4</span>),</span><br><span class="line">  padding: EdgeInsets.all(<span class="number">10</span>),</span><br><span class="line">  decoration: BoxDecoration(</span><br><span class="line">    borderRadius: BorderRadius.circular(<span class="number">10</span>)</span><br><span class="line">  )</span><br><span class="line">  child:...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전부 - 방법1</span></span><br><span class="line">BorderRadius.circular(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전부 - 방법2</span></span><br><span class="line">BorderRadius.all(Radius.circular(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 가로만</span></span><br><span class="line">BorderRadius.horizontal(Radius.circular(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 세로만</span></span><br><span class="line">BorderRadius.vertical(Radius.circular(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 한곳만</span></span><br><span class="line">BorderRadius.only(topLeft:Radius.circular(<span class="number">10</span>))</span><br><span class="line"><span class="comment">// topLeft topRight bottomLeft bottomRight</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 여러개 사용예시</span></span><br><span class="line">BorderRadius.only(</span><br><span class="line">  topLeft: Radius.circular(<span class="number">19</span>),</span><br><span class="line">  bottomLeft: Radius.circular(<span class="number">19</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="마지막으로"><a href="#마지막으로" class="headerlink" title="마지막으로"></a>마지막으로</h2><p>margin, padding, border, border radius 를 적용하는 방법을 정리해보았는데 기존 css를 사용하는 벙법과는 많이 달라서 처음에는 혼선이 왔지만, 자동완성기능이나 타입이 정해져 있기때문에 더 깔끔하게 코드를 작성할 수 있어서 좋았습니다.</p>]]></content:encoded>
      
      <comments>http://flamingotiger.github.io/frontend/flutter/flutter-style/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
